diff a/pcsxr/PKGBUILD b/pcsxr/PKGBUILD
--- a/pcsxr/PKGBUILD	1969-12-31 17:00:00.000000000 -0700
+++ b/pcsxr/PKGBUILD	1969-12-31 17:00:00.000000000 -0700
@@ -0,0 +1,50 @@
+# Maintainer: Noa Body <noabody@archlinux.org>
+
+pkgname=pcsxr
+pkgver=1.9.94.r1731.62467b86
+pkgrel=1
+epoch=1
+pkgdesc='Sony PlayStation emulator.'
+arch=(x86_64)
+url=http://pcsxr.codeplex.com
+license=(GPL)
+depends=(ffmpeg4.4 gtk3 hicolor-icon-theme libarchive libcdio libxtst libxv sdl2)
+makedepends=(cmake git gtk3 intltool mesa sdl2)
+provides=("$pkgname")
+conflicts=("$pkgname"-git "$pkgname"-pgxp-git)
+replaces=("$pkgname"-git "$pkgname"-pgxp-git)
+source=("$pkgname"::git+https://github.com/neoh4x0r/"$pkgname".git
+        https://github.com/noabody/unibuild/raw/master/data/pcsxr-pgxp.png)
+sha256sums=('SKIP'
+            '0589ace72608cd59a540bb7c68ed7fe40a3bfb1dceeab939dfc46050bdc843d9')
+
+pkgver() {
+  cd "$pkgname"
+  local _ver="$(grep -Pio '^set.*(maj|min|pat).*\d+' CMakeLists.txt | grep -Pio '\d+$' | perl -pe 's|\s|.|' | perl -pe 's|(.*)\.$|\1|')"
+  printf "%s.r%s.g%s" "$_ver" "$(git rev-list "$(git rev-list --tags --no-walk --max-count=1)"..HEAD --count)" "$(git rev-parse --short HEAD)"
+}
+
+prepare() {
+  test -f "$pkgname/gui/data/pixmaps/$pkgname-icon.svg" || inkscape "$pkgname"/gui/data/pixmaps/"$pkgname"-icon.png --export-plain-svg --export-filename="$pkgname"/gui/data/pixmaps/"$pkgname"-icon.svg
+  test -f "$pkgname/gui/data/pixmaps/$pkgname-pgxp.png" || cp "$pkgname"-pgxp.png "$pkgname"/gui/data/pixmaps/
+  perl -pi -e 's|(.*/pcsxr\.png.*\n)|\1    \${CMAKE_CURRENT_SOURCE_DIR}/data/pixmaps/pcsxr-pgxp.png\n|gi ; s|48x48|scalable|gi' "$pkgname"/gui/CMakeLists.txt
+  test ! -d build || rm -rf build
+}
+
+build() {
+  CFLAGS+=' -fcommon'
+  PKG_CONFIG_PATH='/usr/lib/ffmpeg4.4/pkgconfig' cmake -S "$pkgname" -B build \
+    -DCMAKE_BUILD_TYPE=Release \
+    -DCMAKE_INSTALL_PREFIX=/usr \
+    -DCMAKE_INSTALL_LIBDIR=/usr/lib \
+    -DOPENGL_gl_LIBRARY=/usr/lib/libGL.so \
+    -DSND_BACKEND=sdl \
+    -DENABLE_CCDDA=ON \
+    -DUSE_LIBARCHIVE=ON \
+    -DUSE_LIBCDIO=ON
+  cmake --build build -j$(nproc)
+}
+
+package() {
+  DESTDIR="$pkgdir" cmake --build build --target install
+}
