diff a/pcsx2/PKGBUILD b/pcsx2/PKGBUILD
--- a/pcsx2/PKGBUILD	1969-12-31 17:00:00.000000000 -0700
+++ b/pcsx2/PKGBUILD	1969-12-31 17:00:00.000000000 -0700
@@ -0,0 +1,63 @@
+# Maintainer: Noa Body <noabody@archlinux.org>
+
+pkgname=pcsx2
+pkgver=1.7.4274.r0.g87c76ad
+pkgrel=1
+epoch=1
+pkgdesc='A Sony PlayStation 2 emulator'
+arch=(x86_64)
+url=https://www.pcsx2.net
+license=(GPL2 GPL3 LGPL2.1 LGPL3)
+depends=(alsa-lib ffmpeg hicolor-icon-theme libaio
+         libglvnd libpcap libpng libxrandr qt6-base
+         qt6-svg sdl2 soundtouch wayland)
+makedepends=(clang cmake git libpulse lld llvm ninja
+             p7zip qt6-tools qt6-wayland)
+provides=(pcsx2-qt)
+source=(git+https://github.com/PCSX2/pcsx2.git
+        https://github.com/PCSX2/pcsx2_patches/releases/download/latest/cheats_ni.zip
+        https://github.com/PCSX2/pcsx2_patches/releases/download/latest/cheats_ws.zip
+        "$pkgname".patch)
+noextract=(cheats_ni.zip cheats_ws.zip)
+sha256sums=(SKIP
+            SKIP
+            SKIP
+            'c965a58a0d0204b1d4e4b6c5e3be0fd5c4b3257fe39cbf4399a878b934a7c70b')
+
+pkgver() {
+  cd "$pkgname"
+  git describe --long --abbrev=7 --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
+}
+
+prepare() {
+  patch -Np1 -i "$pkgname".patch
+  test ! -d build || rm -rf build
+  cd "$pkgname"
+  git submodule update --init --recursive
+}
+
+build() {
+  export CMAKE_C_COMPILER=/usr/bin/clang
+  export CMAKE_CXX_COMPILER=/usr/bin/clang++
+  export CMAKE_MODULE_LINKER_FLAGS_INIT="-fuse-ld=lld"
+  export CMAKE_SHARED_LINKER_FLAGS_INIT="-fuse-ld=lld"
+  cmake -S "$pkgname" -B build -G Ninja \
+    -DCMAKE_BUILD_TYPE=Release \
+    -DCMAKE_INSTALL_PREFIX=/usr \
+    -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON \
+    -DWAYLAND_API=ON \
+    -DQT_BUILD=ON \
+    -DUSE_VULKAN=ON \
+    -DDISABLE_ADVANCE_SIMD=ON \
+    -DPACKAGE_MODE=ON \
+    -DCMAKE_SKIP_RPATH=ON \
+    -Wno-dev
+  ninja -C build -j$(nproc)
+  cp -f pcsx2/.github/workflows/scripts/linux/pcsx2-qt.desktop build/bin/PCSX2.desktop
+}
+
+package() {
+  DESTDIR="$pkgdir" cmake --install build
+  install -Dm644 pcsx2/pcsx2/Resources/AppIcon64.png "$pkgdir"/usr/share/icons/hicolor/64x64/apps/PCSX2.png
+  install -m 644 cheats_*.zip "$pkgdir"/usr/share/PCSX2/resources/
+}
diff a/pcsx2/pcsx2.patch b/pcsx2/pcsx2.patch
index e69de29..feb733a 100644
--- a/pcsx2/pcsx2.patch	1969-12-31 17:00:00.000000000 -0700
+++ b/pcsx2/pcsx2.patch	1969-12-31 17:00:00.000000000 -0700
@@ -0,0 +1,79 @@
+diff --git a/pcsx2/CMakeLists.txt b/pcsx2/CMakeLists.txt
+index 35622ee3c..bcdca1954 100644
+--- a/pcsx2/CMakeLists.txt	1969-12-31 17:00:00.000000000 -0700
++++ b/pcsx2/CMakeLists.txt	1969-12-31 17:00:00.000000000 -0700
+@@ -25,6 +25,9 @@ endif()
+ # include some generic functions to ensure correctness of the env
+ include(Pcsx2Utils)
+ 
++set(EXECUTEABLE "pcsx2-qt")
++set(PCSX2_MENU_CATEGORIES "Game;Emulator;")
++
+ check_no_parenthesis_in_path()
+ detectOperatingSystem()
+ check_compiler_version("7.0" "7.0")
+@@ -63,3 +66,5 @@ if(ACTUALLY_ENABLE_TESTS)
+ 	add_subdirectory(tests/ctest)
+ endif()
+ 
++INSTALL(DIRECTORY "${CMAKE_BINARY_DIR}/bin/resources" DESTINATION ${CMAKE_INSTALL_FULL_DATADIR}/PCSX2)
++INSTALL(FILES "${CMAKE_BINARY_DIR}/bin/PCSX2.desktop" DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/applications)
+diff --git a/pcsx2/cmake/BuildParameters.cmake b/pcsx2/cmake/BuildParameters.cmake
+index a402ab883..abb4b228f 100644
+--- a/pcsx2/cmake/BuildParameters.cmake	1969-12-31 17:00:00.000000000 -0700
++++ b/pcsx2/cmake/BuildParameters.cmake	1969-12-31 17:00:00.000000000 -0700
+@@ -36,6 +36,15 @@ if(UNIX AND NOT APPLE)
+ 	option(WAYLAND_API "Enable Wayland support" ON)
+ endif()
+ 
++if(PACKAGE_MODE)
++	file(RELATIVE_PATH relative_datadir ${CMAKE_INSTALL_FULL_BINDIR} ${CMAKE_INSTALL_FULL_DATADIR}/PCSX2)
++	file(RELATIVE_PATH relative_docdir ${CMAKE_INSTALL_FULL_BINDIR} ${CMAKE_INSTALL_FULL_DOCDIR})
++	# Compile all source codes with those defines
++	list(APPEND PCSX2_DEFS
++		PCSX2_APP_DATADIR="${relative_datadir}"
++		PCSX2_APP_DOCDIR="${relative_docdir}")
++endif()
++
+ if(APPLE)
+ 	option(OSX_USE_DEFAULT_SEARCH_PATH "Don't prioritize system library paths" OFF)
+ 	option(SKIP_POSTPROCESS_BUNDLE "Skip postprocessing bundle for redistributability" OFF)
+diff --git a/pcsx2/pcsx2-qt/CMakeLists.txt b/pcsx2/pcsx2-qt/CMakeLists.txt
+index 20590de61..10bf6583c 100644
+--- a/pcsx2/pcsx2-qt/CMakeLists.txt	1969-12-31 17:00:00.000000000 -0700
++++ b/pcsx2/pcsx2-qt/CMakeLists.txt	1969-12-31 17:00:00.000000000 -0700
+@@ -4,6 +4,12 @@ set(CMAKE_AUTOUIC ON)
+ 
+ add_executable(pcsx2-qt)
+ 
++if(PACKAGE_MODE)
++	install(TARGETS pcsx2-qt DESTINATION ${CMAKE_INSTALL_BINDIR})
++ else()
++	install(TARGETS pcsx2-qt DESTINATION ${CMAKE_SOURCE_DIR}/bin)
++endif()
++
+ target_sources(pcsx2-qt PRIVATE
+ 	AboutDialog.cpp
+ 	AboutDialog.h
+diff --git a/pcsx2/pcsx2/Frontend/CommonHost.cpp b/pcsx2/pcsx2/Frontend/CommonHost.cpp
+index 9da1dafd9..d948ac704 100644
+--- a/pcsx2/pcsx2/Frontend/CommonHost.cpp	1969-12-31 17:00:00.000000000 -0700
++++ b/pcsx2/pcsx2/Frontend/CommonHost.cpp	1969-12-31 17:00:00.000000000 -0700
+@@ -128,12 +128,14 @@ void CommonHost::SetAppRoot()
+ 
+ void CommonHost::SetResourcesDirectory()
+ {
+-#ifndef __APPLE__
++#ifdef __APPLE__
++	// On macOS, this is in the bundle resources directory.
++	EmuFolders::Resources = Path::Canonicalize(Path::Combine(EmuFolders::AppRoot, "../Resources"));
++#elif !defined(PCSX2_APP_DATADIR)
+ 	// On Windows/Linux, these are in the binary directory.
+ 	EmuFolders::Resources = Path::Combine(EmuFolders::AppRoot, "resources");
+ #else
+-	// On macOS, this is in the bundle resources directory.
+-	EmuFolders::Resources = Path::Canonicalize(Path::Combine(EmuFolders::AppRoot, "../Resources"));
++	EmuFolders::Resources = Path::Canonicalize(Path::Combine(EmuFolders::AppRoot, PCSX2_APP_DATADIR "/resources"));
+ #endif
+ }
+ 
