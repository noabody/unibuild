diff a/openjk/PKGBUILD b/openjk/PKGBUILD
--- a/openjk/PKGBUILD	1969-12-31 17:00:00.000000000 -0700
+++ b/openjk/PKGBUILD	1969-12-31 17:00:00.000000000 -0700
@@ -0,0 +1,68 @@
+# Maintainer: Noa Body <noabody@archlinux.org>
+
+pkgname=openjk
+pkgver=r3659.0326204a7
+pkgrel=1
+pkgdesc='Improved Jedi Academy/Outcast engine.'
+arch=(x86_64)
+url=https://openjk.org
+license=(GPL2)
+depends=(hicolor-icon-theme libjpeg libpng mesa
+         perl-rename sdl2 xorg-fonts-misc)
+makedepends=(cmake gendesk git imagemagick inkscape zlib)
+source=(
+  "$pkgname"::git+https://github.com/JACoders/OpenJK.git
+  "$pkgname"mp.sh
+  "$pkgname"sp.sh
+  openjo.sh
+)
+provides=("$pkgname")
+conflicts=("$pkgname"-git)
+sha256sums=('SKIP'
+            '97c7357e634ff46d3a1e230d8aeddb0a245f22b4a2241437549cf063c8733a6f'
+            'bf5ff002a17c7da0cb87a8c115169319ee3748958f4f18d5458940aec104a134'
+            'f7579bc65930051c73895875e0755d0c4cc13d62d13bc25825f6347a4f40dea4')
+
+pkgver() {
+  cd "$pkgname"
+  printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
+}
+
+prepare() {
+  gendesk -f -n --name='Jedi Academy MP' --comment='Improved Jedi Academy engine' --custom='Keywords=game;engine;' --exec='/usr/share/openjk/openjkmp.sh' --icon="$pkgname" --terminal=false --categories='GNOME;GTK;Game' --startupnotify=false --pkgname=openjkmp
+  gendesk -f -n --name='Jedi Academy SP' --comment='Improved Jedi Academy engine' --custom='Keywords=game;engine;' --exec='/usr/share/openjk/openjksp.sh' --icon="$pkgname" --terminal=false --categories='GNOME;GTK;Game' --startupnotify=false --pkgname=openjksp
+  gendesk -f -n --name='Jedi Outcast' --comment='Improved Jedi Outcast engine' --custom='Keywords=game;engine;' --exec='/usr/share/openjk/openjo.sh' --icon="$pkgname" --terminal=false --categories='GNOME;GTK;Game' --startupnotify=false --pkgname=openjo
+  perl -pi -e 's|(set\(JK.InstallDir) \"Jedi.*\"(\))|\1 \"\$\{CMAKE_INSTALL_PREFIX\}/share/openjk\"\2|gi' "$pkgname"/cmake/Modules/InstallConfig.cmake
+  perl -pi -e 's|(DESTINATION \"\$\{JK.InstallDir\})/OpenJK|\1/base|gi' "$pkgname"/{code,codemp,code/game,codemp/{cgame,game,ui},codeJK2/game}/CMakeLists.txt
+  perl -pi -e 's|(find_package\(SDL2 REQUIRED CONFIG\).*$)|\1\n\t\tget_target_property(SDL2_INCLUDE_DIRS SDL2::SDL2 INTERFACE_INCLUDE_DIRECTORIES)\n\t\tget_target_property(SDL2_LIBRARIES SDL2::SDL2 IMPORTED_LOCATION_NOCONFIG)|gi' "$pkgname"/{code,codemp}/CMakeLists.txt
+  test ! -d "$pkgname/build" || rm -rf "$pkgname"/build
+}
+
+build() {
+  if [ ! -f "$pkgname.svg" ]; then
+    convert -thumbnail 256x256 -fuzz 10% -transparent black -strip "$pkgname"/shared/icons/OpenJK_Icon_1024.png "$pkgname".png
+    inkscape "$pkgname".png --export-plain-svg --export-filename="$pkgname".svg
+    rm "$pkgname".png
+  fi
+
+  cmake -S "$pkgname" -B "$pkgname"/build \
+    -DCMAKE_BUILD_TYPE=Release \
+    -DCMAKE_INSTALL_PREFIX=/usr \
+    -DBuildJK2SPEngine=ON \
+    -DBuildJK2SPGame=ON \
+    -DBuildJK2SPRdVanilla=ON \
+    -Wno-dev
+  make -C "$pkgname"/build -j4
+}
+
+package() {
+  install -dm 755 "$pkgdir"/usr/{bin,share/{"$pkgname"/base,applications,icons/hicolor/scalable/apps}}
+  make -C "$pkgname"/build DESTDIR="$pkgdir" install
+#  install -m 755 "$pkgname"/build/openj*.x86_64 "$pkgdir"/usr/share/"$pkgname"/
+#  find "$pkgname"/build -type f -iname '*vanilla*.so' -exec install -m 644 "{}" "$pkgdir"/usr/share/"$pkgname"/ \;
+#  find "$pkgname"/build -type f \( -iname '*game*.so' -o -iname 'ui*.so' \) -exec install -m 644 "{}" "$pkgdir"/usr/share/"$pkgname"/base/ \;
+  install -m 644 *.desktop "$pkgdir"/usr/share/applications/
+  install -m 755 *.sh "$pkgdir"/usr/share/"$pkgname"/
+  install -m 644 "$pkgname".svg "$pkgdir"/usr/share/icons/hicolor/scalable/apps/
+  ln -rsf "$pkgdir"/usr/share/"$pkgname"/*.x86_64 "$pkgdir"/usr/bin/
+}
diff a/openjk/openjkmp.sh b/openjk/openjkmp.sh
--- a/openjk/openjkmp.sh	1969-12-31 17:00:00.000000000 -0700
+++ b/openjk/openjkmp.sh	1969-12-31 17:00:00.000000000 -0700
@@ -0,0 +1,72 @@
+#!/bin/bash
+gmdir="$HOME/games/swjk2a"
+gmcfg="$HOME/.local/share/openjk"
+gmtgt="base/assets0.pk3"
+gmprm=""
+glnch="openjk.x86_64"
+i_syms=()
+
+gconf () {
+test -d "$gmcfg" || mkdir -p "$gmcfg"
+echo -e "gamepath= $gmdir\ngamemod= base\ngameparm= $gmprm" | tee "$gmcfg/basedir"
+}
+
+gstart () {
+readarray -t i_syms < <(find /usr/share/openjk -mindepth 1 -type d -printf '%P\n')
+for i in ${!i_syms[@]}; do
+  test -d "$gmbdr/${i_syms[$i]}" || mkdir -p "$gmbdr/${i_syms[$i]}"
+done
+unset i_syms
+readarray -t i_syms < <(find /usr/share/openjk -type f ! \( -iname '*jo*' -o ! -iname '*.so' \) -printf '%P\n')
+for i in ${!i_syms[@]}; do
+  test -h "$gmbdr/${i_syms[$i]}" || ln -sf "/usr/share/openjk/${i_syms[$i]}" "$gmbdr/${i_syms[$i]}"
+done
+unset i_syms
+echo "$glnch +set fs_basepath $gmbdr $gmgnm $gmpar" | xargs -i -r sh -c "{}"
+}
+
+gtest () {
+gmbse="$(grep -Pi '^gamepath=.*' "$gmcfg/basedir" | head -1)"
+gmgme="$(grep -Pi '^gamemod=.*' "$gmcfg/basedir" | head -1)"
+gmgpm="$(grep -Pi '^gameparm=.*' "$gmcfg/basedir" | head -1)"
+gmbdr="${gmbse#gamepath= }"
+gmgnm="${gmgme#gamemod= }"
+gmpar="${gmgpm#gameparm= }"
+}
+
+test -f "$gmcfg/basedir" || gconf
+gtest
+if [ -z "$gmbdr" ]; then
+  gconf
+  gtest
+fi
+if [ -d "$gmbdr" ]; then
+  if [ ! -f "$gmbdr/$gmtgt" ]; then
+    gmchk="$(find -H "$gmbdr" -mindepth 2 -maxdepth 2 -type f -regextype posix-extended -iregex "$gmbdr/$gmtgt" -printf '%p\n' | grep -Pic "$gmbdr/$gmtgt")"
+    if [ $gmchk -eq 1 ]; then
+      echo -e "File system is case sensitive\nFile/folder names must be lowercase\n Rename subdirs of\n  $gmbdr\n    containing\n  $gmtgt?\nRequires perl-rename command" | xmessage -file - -buttons Yes,No -default No -center -timeout 30
+      test $? -eq 101 && find -H "$gmbdr" -depth -exec perl-rename 's|([^/]*\Z)|lc($1)|e' {} +
+    elif [ $gmchk -gt 1 ]; then
+      echo -e "File system is case sensitive\nFile/folder names must be lowercase\n Cannot rename subdirs of\n  $gmbdr\n    containing\n  $gmtgt\n\nBecause more than one exists" | xmessage -file - -buttons Ok:0 -center -timeout 30
+    else
+      echo -e "Config:\n $gmcfg/basedir\n  $gmbse\n found, but not\n  $gmgme\n ($gmbdr/$gmtgt)\n\nRebuild config?" | xmessage -file - -buttons Yes,No -default No -center -timeout 30
+      test $? -eq 101 && gconf
+    fi
+  else
+    if [ ! -d "$gmbdr/$gmgnm" ]; then
+      echo -e "Config:\n $gmcfg/basedir\n  $gmbse\n found, but not\n  $gmgme\n ($gmbdr/$gmgnm)\n\nRebuild config?" | xmessage -file - -buttons Yes,No -default No -center -timeout 30
+      test $? -eq 101 && gconf
+    else
+      if [ -z "$(echo "$gmgnm" | grep -Pio '\w+')" ]; then
+        gmgnm=""
+        gstart
+      else
+        gmgnm="+set fs_game $gmgnm"
+        gstart
+      fi
+    fi
+  fi
+else
+  echo -e "Config:\n $gmcfg/basedir\n  $gmbse\n not found\n\nRebuild config?" | xmessage -file - -buttons Yes,No -default No -center -timeout 30
+  test $? -eq 101 && gconf
+fi
diff a/openjk/openjksp.sh b/openjk/openjksp.sh
--- a/openjk/openjksp.sh	1969-12-31 17:00:00.000000000 -0700
+++ b/openjk/openjksp.sh	1969-12-31 17:00:00.000000000 -0700
@@ -0,0 +1,72 @@
+#!/bin/bash
+gmdir="$HOME/games/swjk2a"
+gmcfg="$HOME/.local/share/openjk"
+gmtgt="base/assets0.pk3"
+gmprm=""
+glnch="openjk_sp.x86_64"
+i_syms=()
+
+gconf () {
+test -d "$gmcfg" || mkdir -p "$gmcfg"
+echo -e "gamepath= $gmdir\ngamemod= base\ngameparm= $gmprm" | tee "$gmcfg/basedir"
+}
+
+gstart () {
+readarray -t i_syms < <(find /usr/share/openjk -mindepth 1 -type d -printf '%P\n')
+for i in ${!i_syms[@]}; do
+  test -d "$gmbdr/${i_syms[$i]}" || mkdir -p "$gmbdr/${i_syms[$i]}"
+done
+unset i_syms
+readarray -t i_syms < <(find /usr/share/openjk -type f ! \( -iname '*jo*' -o ! -iname '*.so' \) -printf '%P\n')
+for i in ${!i_syms[@]}; do
+  test -h "$gmbdr/${i_syms[$i]}" || ln -sf "/usr/share/openjk/${i_syms[$i]}" "$gmbdr/${i_syms[$i]}"
+done
+unset i_syms
+echo "$glnch +set fs_basepath $gmbdr $gmgnm $gmpar" | xargs -i -r sh -c "{}"
+}
+
+gtest () {
+gmbse="$(grep -Pi '^gamepath=.*' "$gmcfg/basedir" | head -1)"
+gmgme="$(grep -Pi '^gamemod=.*' "$gmcfg/basedir" | head -1)"
+gmgpm="$(grep -Pi '^gameparm=.*' "$gmcfg/basedir" | head -1)"
+gmbdr="${gmbse#gamepath= }"
+gmgnm="${gmgme#gamemod= }"
+gmpar="${gmgpm#gameparm= }"
+}
+
+test -f "$gmcfg/basedir" || gconf
+gtest
+if [ -z "$gmbdr" ]; then
+  gconf
+  gtest
+fi
+if [ -d "$gmbdr" ]; then
+  if [ ! -f "$gmbdr/$gmtgt" ]; then
+    gmchk="$(find -H "$gmbdr" -mindepth 2 -maxdepth 2 -type f -regextype posix-extended -iregex "$gmbdr/$gmtgt" -printf '%p\n' | grep -Pic "$gmbdr/$gmtgt")"
+    if [ $gmchk -eq 1 ]; then
+      echo -e "File system is case sensitive\nFile/folder names must be lowercase\n Rename subdirs of\n  $gmbdr\n    containing\n  $gmtgt?\nRequires perl-rename command" | xmessage -file - -buttons Yes,No -default No -center -timeout 30
+      test $? -eq 101 && find -H "$gmbdr" -depth -exec perl-rename 's|([^/]*\Z)|lc($1)|e' {} +
+    elif [ $gmchk -gt 1 ]; then
+      echo -e "File system is case sensitive\nFile/folder names must be lowercase\n Cannot rename subdirs of\n  $gmbdr\n    containing\n  $gmtgt\n\nBecause more than one exists" | xmessage -file - -buttons Ok:0 -center -timeout 30
+    else
+      echo -e "Config:\n $gmcfg/basedir\n  $gmbse\n found, but not\n  $gmgme\n ($gmbdr/$gmtgt)\n\nRebuild config?" | xmessage -file - -buttons Yes,No -default No -center -timeout 30
+      test $? -eq 101 && gconf
+    fi
+  else
+    if [ ! -d "$gmbdr/$gmgnm" ]; then
+      echo -e "Config:\n $gmcfg/basedir\n  $gmbse\n found, but not\n  $gmgme\n ($gmbdr/$gmgnm)\n\nRebuild config?" | xmessage -file - -buttons Yes,No -default No -center -timeout 30
+      test $? -eq 101 && gconf
+    else
+      if [ -z "$(echo "$gmgnm" | grep -Pio '\w+')" ]; then
+        gmgnm=""
+        gstart
+      else
+        gmgnm="+set fs_game $gmgnm"
+        gstart
+      fi
+    fi
+  fi
+else
+  echo -e "Config:\n $gmcfg/basedir\n  $gmbse\n not found\n\nRebuild config?" | xmessage -file - -buttons Yes,No -default No -center -timeout 30
+  test $? -eq 101 && gconf
+fi
diff a/openjk/openjo.sh b/openjk/openjo.sh
--- a/openjk/openjo.sh	1969-12-31 17:00:00.000000000 -0700
+++ b/openjk/openjo.sh	1969-12-31 17:00:00.000000000 -0700
@@ -0,0 +1,72 @@
+#!/bin/bash
+gmdir="$HOME/games/swjk2o"
+gmcfg="$HOME/.local/share/openjo"
+gmtgt="base/assets0.pk3"
+gmprm=""
+glnch="openjo_sp.x86_64"
+i_syms=()
+
+gconf () {
+test -d "$gmcfg" || mkdir -p "$gmcfg"
+echo -e "gamepath= $gmdir\ngamemod= base\ngameparm= $gmprm" | tee "$gmcfg/basedir"
+}
+
+gstart () {
+readarray -t i_syms < <(find /usr/share/openjk -mindepth 1 -type d -printf '%P\n')
+for i in ${!i_syms[@]}; do
+  test -d "$gmbdr/${i_syms[$i]}" || mkdir -p "$gmbdr/${i_syms[$i]}"
+done
+unset i_syms
+readarray -t i_syms < <(find /usr/share/openjk -type f ! \( -iname '*ja*' -o -iname '*jk_sp*' -o -iname '*rdsp*' -o ! -iname '*.so' \) -printf '%P\n')
+for i in ${!i_syms[@]}; do
+  test -h "$gmbdr/${i_syms[$i]}" || ln -sf "/usr/share/openjk/${i_syms[$i]}" "$gmbdr/${i_syms[$i]}"
+done
+unset i_syms
+echo "$glnch +set fs_basepath $gmbdr $gmgnm $gmpar" | xargs -i -r sh -c "{}"
+}
+
+gtest () {
+gmbse="$(grep -Pi '^gamepath=.*' "$gmcfg/basedir" | head -1)"
+gmgme="$(grep -Pi '^gamemod=.*' "$gmcfg/basedir" | head -1)"
+gmgpm="$(grep -Pi '^gameparm=.*' "$gmcfg/basedir" | head -1)"
+gmbdr="${gmbse#gamepath= }"
+gmgnm="${gmgme#gamemod= }"
+gmpar="${gmgpm#gameparm= }"
+}
+
+test -f "$gmcfg/basedir" || gconf
+gtest
+if [ -z "$gmbdr" ]; then
+  gconf
+  gtest
+fi
+if [ -d "$gmbdr" ]; then
+  if [ ! -f "$gmbdr/$gmtgt" ]; then
+    gmchk="$(find -H "$gmbdr" -mindepth 2 -maxdepth 2 -type f -regextype posix-extended -iregex "$gmbdr/$gmtgt" -printf '%p\n' | grep -Pic "$gmbdr/$gmtgt")"
+    if [ $gmchk -eq 1 ]; then
+      echo -e "File system is case sensitive\nFile/folder names must be lowercase\n Rename subdirs of\n  $gmbdr\n    containing\n  $gmtgt?\nRequires perl-rename command" | xmessage -file - -buttons Yes,No -default No -center -timeout 30
+      test $? -eq 101 && find -H "$gmbdr" -depth -exec perl-rename 's|([^/]*\Z)|lc($1)|e' {} +
+    elif [ $gmchk -gt 1 ]; then
+      echo -e "File system is case sensitive\nFile/folder names must be lowercase\n Cannot rename subdirs of\n  $gmbdr\n    containing\n  $gmtgt\n\nBecause more than one exists" | xmessage -file - -buttons Ok:0 -center -timeout 30
+    else
+      echo -e "Config:\n $gmcfg/basedir\n  $gmbse\n found, but not\n  $gmgme\n ($gmbdr/$gmtgt)\n\nRebuild config?" | xmessage -file - -buttons Yes,No -default No -center -timeout 30
+      test $? -eq 101 && gconf
+    fi
+  else
+    if [ ! -d "$gmbdr/$gmgnm" ]; then
+      echo -e "Config:\n $gmcfg/basedir\n  $gmbse\n found, but not\n  $gmgme\n ($gmbdr/$gmgnm)\n\nRebuild config?" | xmessage -file - -buttons Yes,No -default No -center -timeout 30
+      test $? -eq 101 && gconf
+    else
+      if [ -z "$(echo "$gmgnm" | grep -Pio '\w+')" ]; then
+        gmgnm=""
+        gstart
+      else
+        gmgnm="+set fs_game $gmgnm"
+        gstart
+      fi
+    fi
+  fi
+else
+  echo -e "Config:\n $gmcfg/basedir\n  $gmbse\n not found\n\nRebuild config?" | xmessage -file - -buttons Yes,No -default No -center -timeout 30
+  test $? -eq 101 && gconf
+fi
