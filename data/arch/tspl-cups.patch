diff a/tspl-cups/PKGBUILD b/tspl-cups/PKGBUILD
--- a/tspl-cups/PKGBUILD	1969-12-31 17:00:00.000000000 -0700
+++ b/tspl-cups/PKGBUILD	1969-12-31 17:00:00.000000000 -0700
@@ -0,0 +1,66 @@
+# Maintainer: Noa Body <noabody@archlinux.org>
+
+pkgname=tspl-cups
+pkgver=0.1
+_cupsver=2.4.10
+pkgrel=1
+arch=(x86_64)
+license=('Apache-2.0 WITH LLVM-exception AND BSD-3-Clause AND Zlib AND BSD-2-Clause')
+url=https://openprinting.github.io/cups
+makedepends=(acl pam gnutls cups-filters colord 
+             libusb avahi  systemd libpaper)
+#checkdepends=(valgrind)
+source=(https://github.com/OpenPrinting/cups/releases/download/v"$_cupsver"/cups-"$_cupsver"-source.tar.gz
+        https://raw.githubusercontent.com/noabody/unibuild/master/data/tspl.ppd
+        tspl-cups.patch)
+sha256sums=('d75757c2bc0f7a28b02ee4d52ca9e4b1aa1ba2affe16b985854f5336940e5ad7'
+            'e5b93e3837c63af2d531c696fbc6f316aeb3f50da0d1623252cfe0e3b8f4264c'
+            '26192bbf34f1ce3a18080b2935e207f8c2147be864f28da347975d543d58d79d')
+
+#options=(!makeflags)
+
+prepare() {
+  cd cups-"$_cupsver"
+  patch -Np1 -i "$srcdir"/tspl-cups.patch
+  aclocal -I config-scripts
+  autoconf -I config-scripts
+}
+
+build() {
+  cd cups-"$_cupsver"
+
+  # The build system uses only DSOFLAGS but not LDFLAGS to build some libraries.
+  export DSOFLAGS="$LDFLAGS"
+
+  # use fixed cups user (id 209) since systemd adds "lp" group without a fixed id
+  ./configure --prefix=/usr \
+     --sysconfdir=/etc \
+     --localstatedir=/var \
+     --sbindir=/usr/bin \
+     --libdir=/usr/lib \
+     --with-logdir=/var/log/cups \
+     --with-docdir=/usr/share/cups/doc \
+     --with-exe-file-perm=0755 \
+     --with-cups-user=209 \
+     --with-cups-group=209 \
+     --with-max-log-size=0 \
+     --enable-pam=yes \
+     --enable-raw-printing \
+     --enable-dbus=yes \
+     --with-tls=gnutls \
+     --with-dbusdir=/usr/share/dbus-1 \
+     --enable-relro \
+     --enable-libpaper \
+     --with-optim="$CFLAGS" #--help
+  make -j4
+}
+
+package() {
+  install -Dpm644 tspl.ppd -t "$pkgdir"/usr/share/cups/model/generic
+  install -Dpm755 cups-"$_cupsver"/filter/rastertolabel -T "$pkgdir"/usr/lib/cups/filter/tsplabel
+  perl -pe 's/(?<=modelnumber: ).*/16/gi ; s/TSPL/EPLL/g ; s/tspl(?=\.ppd)/epll/g' "$pkgdir"/usr/share/cups/model/generic/tspl.ppd > "$pkgdir"/usr/share/cups/model/generic/epll.ppd
+  perl -pe 's/(?<=modelnumber: ).*/17/gi ; s/TSPL/EPLP/g ; s/tspl(?=\.ppd)/eplp/g' "$pkgdir"/usr/share/cups/model/generic/tspl.ppd > "$pkgdir"/usr/share/cups/model/generic/eplp.ppd
+  perl -pe 's/(?<=modelnumber: ).*/18/gi ; s/TSPL/ZPL/g ; s/tspl(?=\.ppd)/zpl/g' "$pkgdir"/usr/share/cups/model/generic/tspl.ppd > "$pkgdir"/usr/share/cups/model/generic/zpl.ppd
+  perl -pe 's/(?<=modelnumber: ).*/19/gi ; s/TSPL/CPCL/g ; s/tspl(?=\.ppd)/cpcl/g' "$pkgdir"/usr/share/cups/model/generic/tspl.ppd > "$pkgdir"/usr/share/cups/model/generic/cpcl.ppd
+  perl -pe 's/(?<=modelnumber: ).*/32/gi ; s/TSPL/IPCL/g ; s/tspl(?=\.ppd)/ipcl/g' "$pkgdir"/usr/share/cups/model/generic/tspl.ppd > "$pkgdir"/usr/share/cups/model/generic/ipcl.ppd
+}
diff a/tspl-cups/tspl-cups.patch b/tspl-cups/tspl-cups.patch
--- a/tspl-cups/tspl-cups.patch	1969-12-31 17:00:00.000000000 -0700
+++ b/tspl-cups/tspl-cups.patch	1969-12-31 17:00:00.000000000 -0700
@@ -0,0 +1,193 @@
+diff a/filter/rastertolabel.c b/filter/rastertolabel.c
+--- a/filter/rastertolabel.c	1969-12-31 17:00:00.000000000 -0700
++++ b/filter/rastertolabel.c	1969-12-31 17:00:00.000000000 -0700
+@@ -51,9 +51,31 @@
+ #define ZEBRA_ZPL	0x12		/* Zebra ZPL-based printers */
+ #define ZEBRA_CPCL	0x13		/* Zebra CPCL-based printers */
+ 
++#define BEEPRT		0x14		/* Beeprt, Rollo, Munbyn */
++
+ #define INTELLITECH_PCL	0x20		/* Intellitech PCL-based printers */
+ 
+ 
++/*
++ * Macros...
++ */
++
++#define div_round_up(a,b) (((a) + (b) - 1) / (b))
++
++
++/*
++ * Enumerations...
++ */
++
++enum media_tracking_e			/**** Media tracking types ****/
++{
++  MEDIA_TRACKING_GAP,			/* Track by gap in labels */
++  MEDIA_TRACKING_BLINE,			/* Track by black line */
++  MEDIA_TRACKING_CONTINUOUS,		/* Disable tracking */
++};
++typedef enum media_tracking_e media_tracking_t;
++
++
+ /*
+  * Globals...
+  */
+@@ -131,6 +153,9 @@ Setup(ppd_file_t *ppd)			/* I - PPD file */
+     case ZEBRA_CPCL :
+         break;
+ 
++    case BEEPRT :
++        break;
++
+     case INTELLITECH_PCL :
+        /*
+ 	* Send a PCL reset sequence.
+@@ -305,6 +330,114 @@ StartPage(ppd_file_t         *ppd,	/* I - PPD file */
+ 	printf("PAGE-HEIGHT %u\r\n", header->cupsHeight);
+         break;
+ 
++    case BEEPRT :
++        {
++	  unsigned dots_per_mm_x, dots_per_mm_y;
++	  unsigned width_mm, height_mm;
++	  int reference_x = 0;
++	  int reference_y = 0;
++	  int rotate = 0;
++	  media_tracking_t media_tracking = MEDIA_TRACKING_GAP;
++	  int gap_mark_height = 3;
++	  int gap_mark_offset = 0;
++	  int feed_offset = 0;
++	  int darkness = 8;
++	  int speed = 4;
++	  int autodotted = 0;
++
++	  /*
++	   * Threat 203 dpi as exactly 8 dots per mm, 300 dpi as 12 dots per mm.
++	   */
++	  dots_per_mm_x = div_round_up(10 * header->HWResolution[0], 254);
++	  dots_per_mm_y = div_round_up(10 * header->HWResolution[1], 254);
++
++	  width_mm = div_round_up(header->cupsWidth, dots_per_mm_x);
++	  height_mm = div_round_up(header->cupsHeight, dots_per_mm_y);
++	  printf("SIZE %u mm,%u mm\r\n", width_mm, height_mm);
++
++	  /* The typo is used in the PPD, but not in user visible strings */
++	  if ((choice = ppdFindMarkedChoice(ppd, "AdjustHoriaontal")) != NULL &&
++	      strcmp(choice->choice, "Default"))
++	    reference_x = atoi(choice->choice);
++
++	  if ((choice = ppdFindMarkedChoice(ppd, "AdjustVertical")) != NULL &&
++	      strcmp(choice->choice, "Default"))
++	    reference_y = atoi(choice->choice);
++
++	  if ((choice = ppdFindMarkedChoice(ppd, "Rotate")) != NULL &&
++	      strcmp(choice->choice, "Default"))
++	    rotate = atoi(choice->choice);
++
++	  if ((choice = ppdFindMarkedChoice(ppd, "zeMediaTracking")) != NULL) {
++	    if (!strcmp(choice->choice, "BLine"))
++	      media_tracking = MEDIA_TRACKING_BLINE;
++	    else if (!strcmp(choice->choice, "Continuous"))
++	      media_tracking = MEDIA_TRACKING_CONTINUOUS;
++	  }
++
++	  if ((choice = ppdFindMarkedChoice(ppd, "GapOrMarkHeight")) != NULL &&
++	      strcmp(choice->choice, "Default"))
++	    gap_mark_height = atoi(choice->choice);
++
++	  if ((choice = ppdFindMarkedChoice(ppd, "GapOrMarkOffset")) != NULL &&
++	      strcmp(choice->choice, "Default"))
++	    gap_mark_offset = atoi(choice->choice);
++
++	  if ((choice = ppdFindMarkedChoice(ppd, "FeedOffset")) != NULL &&
++	      strcmp(choice->choice, "Default"))
++	    feed_offset = atoi(choice->choice);
++
++	  if ((choice = ppdFindMarkedChoice(ppd, "Darkness")) != NULL &&
++	      strcmp(choice->choice, "Default"))
++	    darkness = atoi(choice->choice);
++
++	  if ((choice = ppdFindMarkedChoice(ppd, "zePrintRate")) != NULL &&
++	      strcmp(choice->choice, "Default"))
++	    speed = atoi(choice->choice);
++
++	  if ((choice = ppdFindMarkedChoice(ppd, "Autodotted")) != NULL &&
++	      strcmp(choice->choice, "Default"))
++	    autodotted = atoi(choice->choice);
++
++	  printf("REFERENCE %d,%d\r\n", (int)dots_per_mm_x * reference_x,
++	         (int)dots_per_mm_y * reference_y);
++	  printf("DIRECTION %u,0\r\n", rotate);
++
++	  switch (media_tracking)
++	  {
++	    case MEDIA_TRACKING_GAP:
++	        printf("GAP %d mm,%d mm\r\n",
++	               gap_mark_height, gap_mark_offset);
++	        break;
++
++	    case MEDIA_TRACKING_BLINE:
++	        printf("BLINE %d mm,%d mm\r\n",
++	               gap_mark_height, gap_mark_offset);
++	        break;
++
++	    case MEDIA_TRACKING_CONTINUOUS:
++	        printf("GAP 0 mm,0 mm\r\n");
++	        break;
++	  }
++
++	  printf("OFFSET %d mm\r\n", feed_offset);
++	  printf("DENSITY %u\r\n", darkness);
++	  printf("SPEED %u\r\n", speed);
++
++	  if (autodotted)
++	    printf("SETC AUTODOTTED ON\r\n");
++	  else
++	    printf("SETC AUTODOTTED OFF\r\n");
++
++	  printf("SETC PAUSEKEY ON\r\n");
++	  printf("SETC WATERMARK OFF\r\n");
++	  printf("CLS\r\n");
++
++	  printf("BITMAP 0,0,%u,%u,1,", (header->cupsWidth + 7) >> 3,
++	         header->cupsHeight);
++	}
++        break;
++
+     case INTELLITECH_PCL :
+        /*
+         * Set the media size...
+@@ -686,6 +819,10 @@ EndPage(ppd_file_t          *ppd,	/* I - PPD file */
+ 	puts("PRINT\r");
+ 	break;
+ 
++    case BEEPRT :
++        puts("\nPRINT 1,1\r");
++        break;
++
+     case INTELLITECH_PCL :
+         printf("\033*rB");		/* End GFX */
+         printf("\014");			/* Eject current page */
+@@ -881,6 +1018,21 @@ OutputLine(ppd_file_t         *ppd,	/* I - PPD file */
+ 	}
+ 	break;
+ 
++    case BEEPRT :
++        /* Convert 8-bit grayscale to 1-bit black and white */
++        for (i = 0; i < header->cupsBytesPerLine;) {
++          unsigned char out = 0;
++          unsigned char mask = 0x80;
++
++          for (; mask != 0 && i < header->cupsBytesPerLine; mask >>= 1) {
++            if (Buffer[i ++] >= 200)  /* arbitrary threshold */
++              out |= mask;
++          }
++          putchar(~out);
++        }
++        fflush(stdout);
++        break;
++
+     case INTELLITECH_PCL :
+ 	if (Buffer[0] ||
+             memcmp(Buffer, Buffer + 1, header->cupsBytesPerLine - 1))
