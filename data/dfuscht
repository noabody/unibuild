#!/bin/bash

# Daggerfall Unity Save stats modifer, hard presets

spth="$(realpath "$HOME/.config/unity3d/Daggerfall Workshop/Daggerfall Unity/Saves")"
# default engine local config path
i_pths=()
sctr=0
npth="${@:1}"
# pull all command line objects in as single path

test -d "$npth" && spth="$(realpath "$npth")"
# if path provided on cmdline, use it
readarray -t i_pths < <(find -H "$spth" -maxdepth 3 -type f -iname 'savedata.txt' -printf '%h\n' 2>/dev/null | sort)
# find the save games

schk () {
if ! [[ $(echo "$1" | sort -u | wc -l) -eq 1 && -n "$(echo "$1" | grep -Pio "$2")" ]]; then
  schg=1
  ((sctr++))
  # count changes
fi
((sops++))
# count operations
}
# change if not single value matching given

IFS=$'\n'
if [[ ${#i_pths[@]} -gt 0 ]]; then
  for save in ${i_pths[@]}; do
    plyr=$(grep -Pi 'currenthealth' "$save/SaveData.txt" | wc -l)
    if [[ $plyr -gt 1 ]]; then
      echo -e "  $save/SaveData.txt:\n      contains enemy data. Updating would create super enemies.\n      Save with no enemies nearby and retry.\n"
    elif [[ $plyr -eq 1 ]]; then
      svar="$(grep -Pio '\"AdvancementMultiplier\": [^,]+' "$save/SaveData.txt" | grep -Pio '[^\s]+$')"
      schk "$svar" 0.0
      test -n "$schg" && perl -pi -e 's#(\"AdvancementMultiplier\":) [\d\.]+#\1 0.0#gi' "$save/SaveData.txt" ; unset schg
# 3.0 to 0.3, lower advances faster, 0.0 to disable

      svar="$(grep -Pio '\"HitPointsPerLevel\": [^,]+' "$save/SaveData.txt" | grep -Pio '[^\s]+$')"
      schk "$svar" 0
      test -n "$schg" && perl -pi -e 's#(\"HitPointsPerLevel\":) \d+#\1 0#gi' "$save/SaveData.txt" ; unset schg
# 8 to 30, could be 99, 0 to disable

      svar="$(grep -Pio '\"(Paralysis|Magic|Poison|Fire|Frost|Shock|Disease)\": \"[^\"]+' "$save/SaveData.txt" | grep -Pio '[^\"]+$')"
      schk "$svar" Immune
      test -n "$schg" && perl -pi -e 's#(\"(Paralysis|Magic|Poison|Fire|Frost|Shock|Disease)\": \").*(?=\")#\1Immune#gi' "$save/SaveData.txt" ; unset schg
# blank or immune

      svar="$(grep -Pio '\"(ShortBlades|LongBlades|HandToHand|Axes|BluntWeapons|MissileWeapons)\": \"[^\"]+' "$save/SaveData.txt" | grep -Pio '[^\"]+$')"
      schk "$svar" Expert
      test -n "$schg" && perl -pi -e 's#(\"(ShortBlades|LongBlades|HandToHand|Axes|BluntWeapons|MissileWeapons)\": \").*(?=\")#\1Expert#gi' "$save/SaveData.txt" ; unset schg
# blank or expert

      svar="$(grep -Pio '\"(UndeadAttackModifier|DaedraAttackModifier|HumanoidAttackModifier|AnimalsAttackModifier)\": \"[^\"]+' "$save/SaveData.txt" | grep -Pio '[^\"]+$')"
      schk "$svar" Bonus
      test -n "$schg" && perl -pi -e 's#(\"(UndeadAttackModifier|DaedraAttackModifier|HumanoidAttackModifier|AnimalsAttackModifier)\": \").*(?=\")#\1Bonus#gi' "$save/SaveData.txt" ; unset schg
# blank or bonus

      svar="$(grep -Pio '\"SpellPointMultiplier\": \"[^\"]+' "$save/SaveData.txt" | grep -Pio '[^\"]+$')"
      schk "$svar" times_3_00
      test -n "$schg" && perl -pi -e 's#(\"SpellPointMultiplier\": \").*(?=\")#\1Times_3_00#gi' "$save/SaveData.txt" ; unset schg
# 0_00, 1_00, 1_75 2_00, 3_00 - match to next

      svar="$(grep -Pio '\"SpellPointMultiplierValue\": [^,]+' "$save/SaveData.txt" | grep -Pio '[^\s]+$')"
      schk "$svar" 3.0
      test -n "$schg" && perl -pi -e 's#(\"SpellPointMultiplierValue\":) [\d\.]+#\1 3.0#gi' "$save/SaveData.txt" ; unset schg
# 0.0, 1.0, 1.75 2.0, 3.0 - match to previous

      svar="$(grep -Pio '\"(AcuteHearing|Athleticism|AdrenalineRush)\": [^,]+' "$save/SaveData.txt" | grep -Pio '[^\s]+$')"
      schk "$svar" true
      test -n "$schg" && perl -pi -e 's#(\"(AcuteHearing|Athleticism|AdrenalineRush)\": ).*(?=,)#\1true#gi' "$save/SaveData.txt" ; unset schg
# blank or true

      svar="$(grep -Pio '\"(Regeneration|RapidHealing)\": \"[^\"]+' "$save/SaveData.txt" | grep -Pio '[^\"]+$')"
      schk "$svar" always
      test -n "$schg" && perl -pi -e 's#(\"(Regeneration|RapidHealing)\": \").*(?=\")#\1Always#gi' "$save/SaveData.txt" ; unset schg
# darkness, light, always - SpellAbsorption avoided due to player hazard

#      svar="$(grep -Pio '\"level\": [^,]+' "$save/SaveData.txt" | grep -Pio '[^\s]+$')"
#      schk "$svar" 1
#      test -n "$schg" && perl -pi -e 's#(\"level\":) \d+#\1 1#gi' "$save/SaveData.txt" ; unset schg
# level, enemies scale to this, leave at minimum - do not alter!

      svar="$(grep -Pio '\"(Strength|Intelligence|Willpower|Agility|Endurance|Personality|Speed|Luck|Medical|Etiquette|Streetwise|Jumping|Orcish|Harpy|Giantish|Dragonish|Nymph|Daedric|Spriggan|Centaurian|Impish|Lockpicking|Mercantile|Pickpocket|Stealth|Swimming|Climbing|Backstabbing|Dodging|Running|Destruction|Restoration|Illusion|Alteration|Thaumaturgy|Mysticism|ShortBlade|LongBlade|HandToHand|Axe|BluntWeapon|Archery|CriticalStrike|reputation\w+)\": [^,\"]+' "$save/SaveData.txt" | grep -Pio '[^\s]+$')"
      schk "$svar" 100
      test -n "$schg" && perl -pi -e 's#(\"(Strength|Intelligence|Willpower|Agility|Endurance|Personality|Speed|Luck|Medical|Etiquette|Streetwise|Jumping|Orcish|Harpy|Giantish|Dragonish|Nymph|Daedric|Spriggan|Centaurian|Impish|Lockpicking|Mercantile|Pickpocket|Stealth|Swimming|Climbing|Backstabbing|Dodging|Running|Destruction|Restoration|Illusion|Alteration|Thaumaturgy|Mysticism|ShortBlade|LongBlade|HandToHand|Axe|BluntWeapon|Archery|CriticalStrike|reputation\w+)\":) [-\d]+#\1 100#gi' "$save/SaveData.txt" ; unset schg
# stats 100 max

      svar="$(grep -Pio '\"(Fire|Frost|DiseaseOrPoison|Shock|Magic)\": [^,\"]+' "$save/SaveData.txt" | grep -Pio '[^\s]+$')"
      schk "$svar" 0
      test -n "$schg" && perl -pi -e 's#(\"(Fire|Frost|DiseaseOrPoison|Shock|Magic)\":) \d+#\1 0#gi' "$save/SaveData.txt" ; unset schg
# resistances, should be 0 if immune

      svar="$(grep -Pio '\"(maxHealth|currentHealth|hits[12])\": [^,]+' "$save/SaveData.txt" | grep -Pio '[^\s]+$')"
      schk "$svar" 999999
      test -n "$schg" && perl -pi -e 's#(\"(maxHealth|currentHealth|hits[12])\":) \d+#\1 999999#gi' "$save/SaveData.txt" ; unset schg
# health/degradation 999999

      svar="$(grep -Pio '\"currentFatigue\": [^,]+' "$save/SaveData.txt" | grep -Pio '[^\s]+$')"
      schk "$svar" 12800
      test -n "$schg" && perl -pi -e 's#(\"currentFatigue\":) \d+#\1 12800#gi' "$save/SaveData.txt" ; unset schg
# max fatigue is strength + endurance x 64, 12800

      svar="$(grep -Pio '\"currentMagicka\": [^,]+' "$save/SaveData.txt" | grep -Pio '[^\s]+$')"
      schk "$svar" 300
      test -n "$schg" && perl -pi -e 's#(\"currentMagicka\":) \d+#\1 300#gi' "$save/SaveData.txt" ; unset schg
# max magicka 300

      svar="$(grep -Pio '\"weightInKg\": [^,]+' "$save/SaveData.txt" | grep -Pio '[^\s]+$')"
      schk "$svar" 0.0
      test -n "$schg" && perl -pi -e 's#(\"weightInKg\":) [\d\.]+#\1 0.0#gi' "$save/SaveData.txt" ; unset schg
# object weight, set to 0.0 for none

      svar="$(grep -Pio '\"goldPieces\": [^,]+' "$save/SaveData.txt" | grep -Pio '[^\s]+$')"
      schk "$svar" 9999
      test -n "$schg" && perl -pi -e 's#(\"goldPieces\":) \d+#\1 9999#gi' "$save/SaveData.txt" ; unset schg
# gold 9999 = 25kg, 99999 = 250kg, minimize gold encumbrance

      svar="$(grep -Pio '\"crimeCommitted\": \"[^\"]+' "$save/SaveData.txt" | grep -Pio '[^\"]+$')"
      schk "$svar" none
      test -n "$schg" && perl -pi -e 's#(\"crimeCommitted\": \").*(?=\")#\1None#gi' "$save/SaveData.txt" ; unset schg
# set crimes committed to none

      svar="$(grep -Pio '\"rep\": [^,]+' "$save/FactionData.txt" | grep -Pio '[^\s]+$')"
      schk "$svar" 100
      test -n "$schg" && perl -pi -e 's#(\"rep\":) [-\d]+#\1 100#gi' "$save/FactionData.txt" ; unset schg
# set faction reputation to 100
      echo -e "  $save:\n       $sctr change(s), in $sops checks, to (SaveData/FactionData).txt\n"
    else
      echo -e "  $save/SaveData.txt:\n       is not a valid save file.\n"
    fi
  done
  unset i_pths IFS
else
  echo "No saves found in $spth."
fi
