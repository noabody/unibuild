rm resx-extract.pl Makefile memcardrex memcardrex.desktop
patch -Np1 -i "${mypatd:-"../"}/memcardrex.patch"
test -f memcardrex.svg || make icon
chmod 755 memcardrex
diff a/memcardrex b/memcardrex
--- a/memcardrex	1969-12-31 17:00:00.000000000 -0700
+++ b/memcardrex	1969-12-31 17:00:00.000000000 -0700
@@ -0,0 +1,5 @@
+#!/bin/bash
+gmcfg="$HOME/.config/memcardrex"
+test -d "$gmcfg" || mkdir -p "$gmcfg"
+test -h "$gmcfg/MemcardRex.exe" || ln -sf "/usr/lib/memcardrex/MemcardRex.exe" "$gmcfg/"
+exec /usr/bin/cli "$gmcfg/MemcardRex.exe" "$@"
diff a/memcardrex.desktop b/memcardrex.desktop
--- a/memcardrex.desktop	1969-12-31 17:00:00.000000000 -0700
+++ b/memcardrex.desktop	1969-12-31 17:00:00.000000000 -0700
@@ -0,0 +1,10 @@
+[Desktop Entry]
+Name=MemcardRex
+Comment=Advanced PlayStation 1 Memory Card editor.
+Keywords=game;console;
+Exec=memcardrex %f
+Icon=memcardrex
+Terminal=false
+Type=Application
+Categories=GNOME;GTK;Game;
+StartupNotify=false
diff a/Makefile b/Makefile
--- a/Makefile	1969-12-31 17:00:00.000000000 -0700
+++ b/Makefile	1969-12-31 17:00:00.000000000 -0700
@@ -0,0 +1,23 @@
+prefix := /usr
+name := MemcardRex
+libdir := $(prefix)/lib/memcardrex
+icondir := $(prefix)/share/icons/hicolor/scalable/apps
+all:
+	msbuild MemcardRex.sln /p:Configuration="WinForms release"\;Platform="Any CPU"\;TargetFrameworkVersion=v4.0 /t:Build
+clean:
+	msbuild MemcardRex.sln /p:Configuration="WinForms release"\;Platform="Any CPU"\;TargetFrameworkVersion=v4.0 /t:Clean
+icon:
+	perl resx-extract.pl MemcardRex/GUI/mainWindow.resx
+	mv *.Icon.ico mcr.ico
+	icotool -i 1 -x mcr.ico
+	convert mcr_1_48x48x8.png -thumbnail 256x256 memcardrex.svg
+	rm -f mcr.ico mcr_1_48x48x8.png
+install:
+	mkdir -p $(prefix)/share/applications/
+	mkdir -p $(icondir)/
+	mkdir -p $(libdir)/
+	install -m 644 MemcardRex/bin/Release/$(name).exe $(libdir)/
+	install -m 755 memcardrex $(prefix)/bin/
+	cp memcardrex.desktop $(prefix)/share/applications/memcardrex.desktop
+	cp memcardrex.svg $(icondir)/memcardrex.svg
+.PHONY: all clean icon install
diff a/resx-extract.pl b/resx-extract.pl
index e69de29..b1824e1 100644
--- a/resx-extract.pl	1969-12-31 17:00:00.000000000 -0700
+++ b/resx-extract.pl	1969-12-31 17:00:00.000000000 -0700
@@ -0,0 +1,149 @@
+#!perl
+
+use strict;
+use MIME::Base64 qw(decode_base64);
+use File::Basename;
+
+
+sub doextract
+	{
+	my ($resxfile, $outputfolder)=@_;
+
+	my $comment = 0;
+	my $value = 0;
+	my $name="";
+	my $type="";
+	my $mime="";
+
+	print "$resxfile\n";
+
+	open(IN, $resxfile);
+	while (<IN>)
+		{
+		chop;
+
+		if (/<!--/)
+			{
+			$comment = 1;
+			next;
+			}
+
+		if (/-->/)
+			{
+			$comment = 0;
+			next;
+			}
+
+		next if ($comment);
+
+		if (/<data.*>/)
+			{
+			$name = $1 if (/ name=\"([^"]*)\"/);
+			$type = $1 if (/ type=\"([^"]*)\"/);
+			$mime = $1 if (/ mimetype=\"([^"]*)\"/);
+			next;
+			}
+
+		if (/<value>/)
+			{
+			next if ($name eq "" || $type eq "");
+
+			# print "name = $name\n";
+			# print "type = $type\n";
+			# print "mime = $mime\n";
+
+			my $filename="";
+
+			if ($type =~ /^System.Drawing.Bitmap, System.Drawing/)
+				{
+				$filename = "$outputfolder/$name.bmp";
+				}
+			elsif ($type =~ /^System.Drawing.Icon, System.Drawing/)
+				{
+				$filename = "$outputfolder/$name.ico";
+				}
+
+
+			if ($filename ne "")
+				{
+				print "-> $filename\n";
+
+				open(OUT, ">$filename");
+				binmode OUT;
+				$value = 1;
+				}
+			elsif ($type =~ /^System\.Boolean/
+					|| $type =~ /^System\.Int32/
+					|| $type =~ /^System\.CodeDom/
+					|| $type =~ /^System\.Globalization/
+					|| $type =~ /^System\.Drawing\.Size/
+					|| $type =~ /^System\.Drawing\.Point/
+					)
+				{
+				# Ignore!
+				$value = -1;
+				}
+			else
+				{
+				print "!! Unknown type $type\n";
+				$value = -1;
+				}
+
+
+			next;
+			}
+
+		if (/<\/value>/)
+			{
+			if ($value > 0)
+				{
+				close(OUT);
+				$value = 0;
+				}
+			$name = $type = $mime = "";
+			}
+
+		next if ($value <= 0);
+
+		my $line=$_;
+
+		$line = $1 if ($line =~ /^\s*(\S+)\s*$/);
+
+		print OUT decode_base64($line);
+		}
+
+	close(IN);
+	}
+
+
+sub main
+	{
+	my $folder=".";
+	my $nextarg=0;
+
+	foreach my $arg (@ARGV)
+		{
+		if ($nextarg == 1)
+			{
+			$folder = $arg;
+			mkdir($folder);
+			$nextarg = 0;
+			}
+		elsif ($arg eq "--to")
+			{
+			$nextarg = 1;
+			}
+		else
+			{
+			foreach my $file (glob $arg)
+				{
+				# print "$file -> $folder\n";
+				doextract($file, $folder);
+				}
+			}
+		}
+
+	return 0;
+	}
+
+exit main();
