diff --git a/Makefile.am b/Makefile.am
index 8e3a2f1..11ea76a 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -6,7 +6,7 @@ SUBDIRS = po po-properties $(SRC_SUBDIRS) docs m4macros build
 
 # require automake 1.4
 AUTOMAKE_OPTIONS = 1.7
-ACLOCAL_AMFLAGS = -I m4
+ACLOCAL_AMFLAGS = -I m4macros
 
 EXTRA_DIST +=			\
 	HACKING			\
diff --git a/autogen.sh b/autogen.sh
index 078f483..572c16c 100755
--- a/autogen.sh
+++ b/autogen.sh
@@ -48,7 +48,10 @@ fi
 	DIE=1
 }
 
-if automake-1.15 --version < /dev/null > /dev/null 2>&1 ; then
+if automake-1.16 --version < /dev/null > /dev/null 2>&1 ; then
+    AUTOMAKE=automake-1.16
+    ACLOCAL=aclocal-1.16
+else if automake-1.15 --version < /dev/null > /dev/null 2>&1 ; then
     AUTOMAKE=automake-1.15
     ACLOCAL=aclocal-1.15
 else if automake-1.14 --version < /dev/null > /dev/null 2>&1 ; then
@@ -71,8 +74,8 @@ else if automake-1.7 --version < /dev/null > /dev/null 2>&1 ; then
     ACLOCAL=aclocal-1.7
 else
 	echo
-	echo "You must have automake 1.7.x, 1,10.x, 1.11.x, 1.12.x, 1.13.x, 1.14.x"
-	echo "or 1.15.x installed to compile $PROJECT."
+	echo "You must have automake 1.7.x, 1,10.x, 1.11.x, 1.12.x, 1.13.x, 1.14.x,"
+	echo "1.15.x, or 1.16.x installed to compile $PROJECT."
 	echo "Install the appropriate package for your distribution,"
 	echo "or get the source tarball at http://ftp.gnu.org/gnu/automake/"
 	DIE=1
@@ -83,6 +86,7 @@ fi
 fi
 fi
 fi
+fi
 
 if test "$DIE" -eq 1; then
 	exit 1
diff --git a/configure.ac b/configure.ac
index b75f9c6..809b226 100644
--- a/configure.ac
+++ b/configure.ac
@@ -45,7 +45,7 @@ AC_INIT([gtk+], [gtk_version],
 
 AC_CONFIG_SRCDIR([gdk/gdktypes.h])
 AC_CONFIG_HEADERS([config.h])
-AC_CONFIG_MACRO_DIR([m4])
+AC_CONFIG_MACRO_DIR([m4macros])
 
 # Save this value here, since automake will set cflags later
 cflags_set=${CFLAGS+set}
diff --git a/demos/pixbuf-init.c b/demos/pixbuf-init.c
index 898de45..20e35e5 100644
--- a/demos/pixbuf-init.c
+++ b/demos/pixbuf-init.c
@@ -1,15 +1,13 @@
 #include "config.h"
 #include <glib.h>
-
-#include <sys/stat.h>
-#include <stdlib.h>
+#include <glib/gstdio.h>
 
 static gboolean
 file_exists (const char *filename)
 {
-  struct stat statbuf;
+  GStatBuf statbuf;
 
-  return stat (filename, &statbuf) == 0;
+  return g_stat (filename, &statbuf) == 0;
 }
 
 void
diff --git a/docs/reference/gdk/Makefile.am b/docs/reference/gdk/Makefile.am
index 5704c69..9a8ab48 100644
--- a/docs/reference/gdk/Makefile.am
+++ b/docs/reference/gdk/Makefile.am
@@ -37,7 +37,7 @@ IGNORE_HFILES=			\
 
 # Extra files to add when scanning (relative to $srcdir)
 EXTRA_HFILES=			\
-	../../../gdk/x11/gdkx.h 
+	$(top_srcdir)/gdk/x11/gdkx.h 
 
 # CFLAGS and LDFLAGS for compiling scan program. Only needed
 # if $(DOC_MODULE).types is non-empty.
diff --git a/docs/reference/gtk/gtk2.types b/docs/reference/gtk/gtk2.types
index dc7295c..0e0e984 100644
--- a/docs/reference/gtk/gtk2.types
+++ b/docs/reference/gtk/gtk2.types
@@ -110,19 +110,15 @@ gtk_old_editable_get_type
 gtk_option_menu_get_type
 gtk_orientable_get_type
 gtk_page_setup_get_type
-gtk_page_setup_unix_dialog_get_type
 gtk_paned_get_type
 gtk_paper_size_get_type
 gtk_pixmap_get_type
 gtk_plug_get_type
 gtk_preview_get_type
-gtk_printer_get_type
 gtk_print_context_get_type
-gtk_print_job_get_type
 gtk_print_operation_get_type
 gtk_print_operation_preview_get_type
 gtk_print_settings_get_type
-gtk_print_unix_dialog_get_type
 gtk_progress_bar_get_type
 gtk_progress_get_type
 gtk_radio_action_get_type
diff --git a/gdk/Makefile.am b/gdk/Makefile.am
index 170eed2..0206669 100644
--- a/gdk/Makefile.am
+++ b/gdk/Makefile.am
@@ -2,6 +2,8 @@
 include $(top_srcdir)/Makefile.decl
 -include $(INTROSPECTION_MAKEFILE)
 INTROSPECTION_GIRS =
+INTROSPECTION_SCANNER_ENV = \
+   CC="$(CC)"
 INTROSPECTION_SCANNER_ARGS = \
    --warn-all \
    --add-include-path=../gdk
@@ -209,7 +211,9 @@ Gdk_2_0_gir_FILES = $(introspection_files)
 Gdk_2_0_gir_EXPORT_PACKAGES = gdk-2.0
 Gdk_2_0_gir_CFLAGS = $(INCLUDES)
 INTROSPECTION_GIRS += Gdk-2.0.gir
-
+if OS_WIN32
+Gdk_2_0_gir_CFLAGS += -I$(srcdir)/win32 -I$(srcdir)
+endif
 if USE_X11
 x11_introspection_files = 		\
 	x11/checksettings.c		\
@@ -257,6 +261,53 @@ introspection_files += $(filter-out x11/gdkx.h, $(x11_introspection_files))
 
 endif # USE_X11
 
+if OS_WIN32
+w32_introspection_files = 		\
+	win32/gdkapplaunchcontext-win32.c \
+	win32/gdkcolor-win32.c \
+	win32/gdkcursor-win32.c \
+	win32/gdkdisplay-win32.c \
+	win32/gdkdnd-win32.c \
+	win32/gdkdrawable-win32.c \
+	win32/gdkdrawable-win32.h \
+	win32/gdkevents-win32.c \
+	win32/gdkfont-win32.c \
+	win32/gdkgc-win32.c \
+	win32/gdkgeometry-win32.c \
+	win32/gdkglobals-win32.c \
+	win32/gdkim-win32.c \
+	win32/gdkimage-win32.c \
+	win32/gdkinput.c \
+	win32/gdkinput-win32.c \
+	win32/gdkinput-win32.h \
+	win32/gdkkeys-win32.c \
+	win32/gdkmain-win32.c \
+	win32/gdkpixmap-win32.c \
+	win32/gdkpixmap-win32.h \
+	win32/gdkprivate-win32.h \
+	win32/gdkproperty-win32.c \
+	win32/gdkscreen-win32.c \
+	win32/gdkselection-win32.c \
+	win32/gdkspawn-win32.c \
+	win32/gdktestutils-win32.c \
+	win32/gdkvisual-win32.c \
+	win32/gdkwin32.h \
+	win32/gdkwin32id.c \
+	win32/gdkwindow-win32.c \
+	win32/gdkwindow-win32.h
+
+GdkWin32-2.0.gir: $(gdktargetlib) Gdk-2.0.gir Makefile
+GdkWin32_2_0_gir_SCANNERFLAGS = --warn-all --strip-prefix=Gdk
+GdkWin32_2_0_gir_INCLUDES = Gio-2.0 Gdk-2.0 GdkPixbuf-2.0 Pango-1.0
+GdkWin32_2_0_gir_LIBS = $(gdktargetlib)
+GdkWin32_2_0_gir_FILES = $(w32_introspection_files)
+GdkWin32_2_0_gir_CFLAGS = $(INCLUDES) -L$(top_builddir)/gdk -I$(srcdir)/win32 -I$(srcdir)
+INTROSPECTION_GIRS += GdkWin32-2.0.gir
+
+introspection_files += $(filter-out x11/gdkwin32.h, $(w32_introspection_files))
+
+endif # OS_WIN32
+
 girdir = $(datadir)/gir-1.0
 gir_DATA = $(INTROSPECTION_GIRS)
 
diff --git a/gdk/win32/gdkevents-win32.c b/gdk/win32/gdkevents-win32.c
index 9b09edd..ac91fa6 100644
--- a/gdk/win32/gdkevents-win32.c
+++ b/gdk/win32/gdkevents-win32.c
@@ -2274,6 +2274,14 @@ gdk_event_translate (MSG  *msg,
 	  in_ime_composition)
 	break;
 
+      /* Ignore autorepeats on modifiers */
+      if (msg->message == WM_KEYDOWN &&
+          (msg->wParam == VK_MENU ||
+           msg->wParam == VK_CONTROL ||
+           msg->wParam == VK_SHIFT) &&
+           ((HIWORD(msg->lParam) & KF_REPEAT) >= 1))
+        break;
+
       if (!propagate (&window, msg,
 		      _gdk_display->keyboard_grab.window,
 		      _gdk_display->keyboard_grab.owner_events,
@@ -3622,8 +3630,7 @@ _gdk_events_queue (GdkDisplay *display)
   if (modal_win32_dialog != NULL)
     return;
   
-  while (!_gdk_event_queue_find_first (display) &&
-	 PeekMessageW (&msg, NULL, 0, 0, PM_REMOVE))
+  while (PeekMessageW (&msg, NULL, 0, 0, PM_REMOVE))
     {
       TranslateMessage (&msg);
       DispatchMessageW (&msg);
diff --git a/gdk/win32/gdkwindow-win32.c b/gdk/win32/gdkwindow-win32.c
index d918686..0968bdc 100644
--- a/gdk/win32/gdkwindow-win32.c
+++ b/gdk/win32/gdkwindow-win32.c
@@ -2767,6 +2767,10 @@ _gdk_windowing_window_at_pointer (GdkDisplay *display,
        * WindowFromPoint() can find our windows, we follow similar logic
        * here, and ignore invisible and disabled windows.
        */
+      UINT cwp_flags = CWP_SKIPDISABLED  |
+                       CWP_SKIPINVISIBLE |
+                       CWP_SKIPTRANSPARENT;
+
       hwnd = GetDesktopWindow ();
       do {
         window = gdk_win32_handle_table_lookup ((GdkNativeWindow) hwnd);
@@ -2777,8 +2781,7 @@ _gdk_windowing_window_at_pointer (GdkDisplay *display,
           break;
 
         screen_to_client (hwnd, screen_pt, &client_pt);
-        hwndc = ChildWindowFromPointEx (hwnd, client_pt, CWP_SKIPDISABLED  |
-                                                         CWP_SKIPINVISIBLE);
+        hwndc = ChildWindowFromPointEx (hwnd, client_pt, cwp_flags);
 
 	/* Verify that we're really inside the client area of the window */
 	if (hwndc != hwnd)
@@ -2789,6 +2792,8 @@ _gdk_windowing_window_at_pointer (GdkDisplay *display,
 	      hwndc = hwnd;
 	  }
 
+        /* Only ignore top-level transparent windows */
+        cwp_flags &= ~CWP_SKIPTRANSPARENT;
       } while (hwndc != hwnd && (hwnd = hwndc, 1));
 
     }
diff --git a/gtk/Makefile.am b/gtk/Makefile.am
index 8cc4536..9ddd9a3 100644
--- a/gtk/Makefile.am
+++ b/gtk/Makefile.am
@@ -2,6 +2,9 @@
 include $(top_srcdir)/Makefile.decl
 -include $(INTROSPECTION_MAKEFILE)
 INTROSPECTION_GIRS =
+INTROSPECTION_SCANNER_ENV = \
+	CC="$(CC)" \
+	PATH="$(builddir):$(builddir)/.libs:$${PATH}:"
 INTROSPECTION_SCANNER_ARGS = \
 	--warn-all \
 	--add-include-path=../gdk
diff --git a/gtk/gtkfilesel.c b/gtk/gtkfilesel.c
index d18c307..245bdf1 100644
--- a/gtk/gtkfilesel.c
+++ b/gtk/gtkfilesel.c
@@ -325,7 +325,7 @@ static CompletionDir* open_ref_dir         (gchar* text_to_complete,
 					    CompletionState* cmpl_state);
 #ifndef G_PLATFORM_WIN32
 static gboolean       check_dir            (gchar *dir_name, 
-					    struct stat *result, 
+					    GStatBuf *result, 
 					    gboolean *stat_subdirs);
 #endif
 static CompletionDir* open_dir             (gchar* dir_name,
@@ -337,11 +337,11 @@ static CompletionDir* open_user_dir        (const gchar* text_to_complete,
 static CompletionDir* open_relative_dir    (gchar* dir_name, CompletionDir* dir,
 					    CompletionState *cmpl_state);
 static CompletionDirSent* open_new_dir     (gchar* dir_name, 
-					    struct stat* sbuf,
+					    GStatBuf *sbuf,
 					    gboolean stat_subdirs);
 static gint           correct_dir_fullname (CompletionDir* cmpl_dir);
 static gint           correct_parent       (CompletionDir* cmpl_dir,
-					    struct stat *sbuf);
+					    GStatBuf *sbuf);
 #ifndef G_PLATFORM_WIN32
 static gchar*         find_parent_dir_fullname    (gchar* dirname);
 #endif
@@ -2984,9 +2984,9 @@ open_relative_dir (gchar           *dir_name,
 
 /* after the cache lookup fails, really open a new directory */
 static CompletionDirSent*
-open_new_dir (gchar       *dir_name,
-	      struct stat *sbuf,
-	      gboolean     stat_subdirs)
+open_new_dir (gchar    *dir_name,
+	      GStatBuf *sbuf,
+	      gboolean  stat_subdirs)
 {
   CompletionDirSent *sent;
   GDir *directory;
@@ -2995,7 +2995,7 @@ open_new_dir (gchar       *dir_name,
   gint entry_count = 0;
   gint n_entries = 0;
   gint i;
-  struct stat ent_sbuf;
+  GStatBuf ent_sbuf;
   GString *path;
   gchar *sys_dir_name;
 
@@ -3101,9 +3101,9 @@ open_new_dir (gchar       *dir_name,
 #ifndef G_PLATFORM_WIN32
 
 static gboolean
-check_dir (gchar       *dir_name,
-	   struct stat *result,
-	   gboolean    *stat_subdirs)
+check_dir (gchar    *dir_name,
+	   GStatBuf *result,
+	   gboolean *stat_subdirs)
 {
   /* A list of directories that we know only contain other directories.
    * Trying to stat every file in these directories would be very
@@ -3113,7 +3113,7 @@ check_dir (gchar       *dir_name,
   static struct {
     const gchar name[5];
     gboolean present;
-    struct stat statbuf;
+    GStatBuf statbuf;
   } no_stat_dirs[] = {
     { "/afs", FALSE, { 0 } },
     { "/net", FALSE, { 0 } }
@@ -3172,7 +3172,7 @@ open_dir (gchar           *dir_name,
 	  CompletionState *cmpl_state)
 {
 #ifndef G_PLATFORM_WIN32
-  struct stat sbuf;
+  GStatBuf sbuf;
   gboolean stat_subdirs;
   GList* cdsl;
 #endif
@@ -3238,7 +3238,7 @@ correct_dir_fullname (CompletionDir* cmpl_dir)
   gint length = strlen (cmpl_dir->fullname);
   gchar *first_slash = strchr (cmpl_dir->fullname, G_DIR_SEPARATOR);
   gchar *sys_filename;
-  struct stat sbuf;
+  GStatBuf sbuf;
 
   /* Does it end with /. (\.) ? */
   if (length >= 2 &&
@@ -3338,9 +3338,9 @@ correct_dir_fullname (CompletionDir* cmpl_dir)
 
 static gint
 correct_parent (CompletionDir *cmpl_dir,
-		struct stat   *sbuf)
+		GStatBuf      *sbuf)
 {
-  struct stat parbuf;
+  GStatBuf parbuf;
   gchar *last_slash;
   gchar *first_slash;
 #ifndef G_PLATFORM_WIN32
diff --git a/gtk/gtkiconcache.c b/gtk/gtkiconcache.c
index 576dd94..143f8f1 100644
--- a/gtk/gtkiconcache.c
+++ b/gtk/gtkiconcache.c
@@ -92,8 +92,8 @@ _gtk_icon_cache_new_for_path (const gchar *path)
 
   gchar *cache_filename;
   gint fd = -1;
-  struct stat st;
-  struct stat path_st;
+  GStatBuf st;
+  GStatBuf path_st;
   CacheInfo info;
 
    /* Check if we have a cache file */
diff --git a/gtk/gtkicontheme.c b/gtk/gtkicontheme.c
index 532d94b..41a62a9 100644
--- a/gtk/gtkicontheme.c
+++ b/gtk/gtkicontheme.c
@@ -902,7 +902,7 @@ insert_theme (GtkIconTheme *icon_theme, const char *theme_name)
   GKeyFile *theme_file;
   GError *error = NULL;
   IconThemeDirMtime *dir_mtime;
-  struct stat stat_buf;
+  GStatBuf stat_buf;
   
   priv = icon_theme->priv;
 
@@ -1052,7 +1052,7 @@ load_themes (GtkIconTheme *icon_theme)
   IconSuffix old_suffix, new_suffix;
   GTimeVal tv;
   IconThemeDirMtime *dir_mtime;
-  struct stat stat_buf;
+  GStatBuf stat_buf;
   
   priv = icon_theme->priv;
 
@@ -1898,7 +1898,7 @@ rescan_themes (GtkIconTheme *icon_theme)
   IconThemeDirMtime *dir_mtime;
   GList *d;
   int stat_res;
-  struct stat stat_buf;
+  GStatBuf stat_buf;
   GTimeVal tv;
 
   priv = icon_theme->priv;
@@ -2927,6 +2927,11 @@ icon_info_ensure_scale_and_pixbuf (GtkIconInfo  *icon_info,
 
               if (mime_type && strcmp (mime_type, "image/svg+xml") == 0)
                 is_svg = TRUE;
+#ifdef G_OS_WIN32
+              else
+                if (strcmp (content_type, ".svg") == 0)
+                  is_svg = TRUE;
+#endif
             }
 
           g_object_unref (file_info);
diff --git a/gtk/gtknotebook.c b/gtk/gtknotebook.c
index 0770de6..a1ac708 100644
--- a/gtk/gtknotebook.c
+++ b/gtk/gtknotebook.c
@@ -6114,7 +6114,7 @@ static void
 gtk_notebook_update_tab_states (GtkNotebook *notebook)
 {
   GList *list;
-
+  return;
   for (list = notebook->children; list != NULL; list = list->next)
     {
       GtkNotebookPage *page = list->data;
diff --git a/gtk/gtkrc.c b/gtk/gtkrc.c
index 50b2563..952010e 100644
--- a/gtk/gtkrc.c
+++ b/gtk/gtkrc.c
@@ -983,7 +983,7 @@ gtk_rc_context_parse_one_file (GtkRcContext *context,
 			       gboolean      reload)
 {
   GtkRcFile *rc_file;
-  struct stat statbuf;
+  GStatBuf statbuf;
   gint saved_priority;
 
   g_return_if_fail (filename != NULL);
@@ -1764,7 +1764,7 @@ gtk_rc_reparse_all_for_settings (GtkSettings *settings,
   GtkRcFile *rc_file;
   GSList *tmp_list;
   GtkRcContext *context;
-  struct stat statbuf;
+  GStatBuf statbuf;
 
   g_return_val_if_fail (GTK_IS_SETTINGS (settings), FALSE);
 
diff --git a/gtk/gtkrecentmanager.c b/gtk/gtkrecentmanager.c
index 609ee1f..1f67c13 100644
--- a/gtk/gtkrecentmanager.c
+++ b/gtk/gtkrecentmanager.c
@@ -2221,7 +2221,7 @@ gboolean
 gtk_recent_info_exists (GtkRecentInfo *info)
 {
   gchar *filename;
-  struct stat stat_buf;
+  GStatBuf stat_buf;
   gboolean retval = FALSE;
   
   g_return_val_if_fail (info != NULL, FALSE);
@@ -2233,7 +2233,7 @@ gtk_recent_info_exists (GtkRecentInfo *info)
   filename = g_filename_from_uri (info->uri, NULL, NULL);
   if (filename)
     {
-      if (stat (filename, &stat_buf) == 0)
+      if (g_stat (filename, &stat_buf) == 0)
         retval = TRUE;
      
       g_free (filename);
diff --git a/gtk/gtksearchenginesimple.c b/gtk/gtksearchenginesimple.c
index f311c19..e53e904 100644
--- a/gtk/gtksearchenginesimple.c
+++ b/gtk/gtksearchenginesimple.c
@@ -39,6 +39,8 @@
 
 #include <string.h>
 
+#include <glib/gstdio.h>
+
 #define BATCH_SIZE 500
 
 typedef struct 
@@ -195,10 +197,10 @@ static GStaticPrivate search_thread_data = G_STATIC_PRIVATE_INIT;
 
 #ifdef HAVE_FTW_H
 static int
-search_visit_func (const char        *fpath,
-		   const struct stat *sb,
-		   int                typeflag,
-		   struct FTW        *ftwbuf)
+search_visit_func (const char     *fpath,
+		   const GStatBuf *sb,
+		   int             typeflag,
+		   struct FTW     *ftwbuf)
 {
   SearchThreadData *data;
   gint i;
diff --git a/gtk/tests/pixbuf-init.c b/gtk/tests/pixbuf-init.c
index 47573ab..5184a38 100644
--- a/gtk/tests/pixbuf-init.c
+++ b/gtk/tests/pixbuf-init.c
@@ -1,15 +1,13 @@
 #include "config.h"
 #include <glib.h>
-
-#include <sys/stat.h>
-#include <stdlib.h>
+#include <glib/gstdio.h>
 
 static gboolean
 file_exists (const char *filename)
 {
-  struct stat statbuf;
+  GStatBuf statbuf;
 
-  return stat (filename, &statbuf) == 0;
+  return g_stat (filename, &statbuf) == 0;
 }
 
 void
diff --git a/gtk/updateiconcache.c b/gtk/updateiconcache.c
index 32c8f41..806ef66 100644
--- a/gtk/updateiconcache.c
+++ b/gtk/updateiconcache.c
@@ -74,12 +74,12 @@ static gchar *var_name = "-";
 
 #include <ftw.h>
 
-static struct stat cache_stat;
+static GStatBuf cache_stat;
 static gboolean cache_up_to_date;
 
-static int check_dir_mtime (const char        *dir, 
-                            const struct stat *sb,
-                            int                tf)
+static int check_dir_mtime (const char     *dir, 
+                            const GStatBuf *sb,
+                            int             tf)
 {
   if (tf != FTW_NS && sb->st_mtime > cache_stat.st_mtime)
     {
@@ -119,7 +119,7 @@ static int check_dir_mtime (const char        *dir,
 gboolean
 is_cache_up_to_date (const gchar *path)
 {
-  struct stat path_stat, cache_stat;
+  GStatBuf path_stat, cache_stat;
   gchar *cache_path;
   int retval; 
   
@@ -1478,7 +1478,7 @@ build_cache (const gchar *path)
 #endif
   GHashTable *files;
   FILE *cache;
-  struct stat path_stat, cache_stat;
+  GStatBuf path_stat, cache_stat;
   struct utimbuf utime_buf;
   GList *directories = NULL;
   int fd;
diff --git a/modules/printbackends/cups/gtkcupsutils.c b/modules/printbackends/cups/gtkcupsutils.c
index dbf9d51..c5f86c1 100644
--- a/modules/printbackends/cups/gtkcupsutils.c
+++ b/modules/printbackends/cups/gtkcupsutils.c
@@ -716,7 +716,7 @@ static void
 _post_send (GtkCupsRequest *request)
 {
   gchar length[255];
-  struct stat data_info;
+  GStatBuf data_info;
 
   GTK_NOTE (PRINTING,
             g_print ("CUPS Backend: %s\n", G_STRFUNC));
diff --git a/tests/testfilechooser.c b/tests/testfilechooser.c
index 443f5c3..86cb14d 100644
--- a/tests/testfilechooser.c
+++ b/tests/testfilechooser.c
@@ -21,13 +21,13 @@
 
 #include <string.h>
 #include <sys/types.h>
-#include <sys/stat.h>
 #include <stdlib.h>
 #include <time.h>
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>
 #endif
 #include <gtk/gtk.h>
+#include <glib/gstdio.h>
 
 #ifdef G_OS_WIN32
 #  include <io.h>
@@ -189,7 +189,7 @@ my_new_from_file_at_size (const char *filename,
 	GdkPixbufLoader *loader;
 	GdkPixbuf       *pixbuf;
 	int              info[2];
-	struct stat st;
+	GStatBuf st;
 
 	guchar buffer [4096];
 	int length;
@@ -198,7 +198,7 @@ my_new_from_file_at_size (const char *filename,
 	g_return_val_if_fail (filename != NULL, NULL);
         g_return_val_if_fail (width > 0 && height > 0, NULL);
 
-	if (stat (filename, &st) != 0) {
+	if (g_stat (filename, &st) != 0) {
                 int errsv = errno;
 
 		g_set_error (error,
@@ -298,8 +298,8 @@ update_preview_cb (GtkFileChooser *chooser)
 	}
       else
 	{
-	  struct stat buf;
-	  if (stat (filename, &buf) == 0)
+	  GStatBuf buf;
+	  if (g_stat (filename, &buf) == 0)
 	    {
 	      gchar *preview_text;
 	      gchar *size_str;
diff --git a/tests/testgtk.c b/tests/testgtk.c
index ec2c57c..b7ea442 100644
--- a/tests/testgtk.c
+++ b/tests/testgtk.c
@@ -35,7 +35,6 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
-#include <sys/stat.h>
 #include <math.h>
 #include <time.h>
 #ifdef HAVE_UNISTD_H
@@ -46,6 +45,7 @@
 #include "gtk/gtk.h"
 #include "gdk/gdk.h"
 #include "gdk/gdkkeysyms.h"
+#include "glib/gstdio.h"
 
 #ifdef G_OS_WIN32
 #define sleep(n) _sleep(n)
@@ -59,9 +59,9 @@
 gboolean
 file_exists (const char *filename)
 {
-  struct stat statbuf;
+  GStatBuf statbuf;
 
-  return stat (filename, &statbuf) == 0;
+  return g_stat (filename, &statbuf) == 0;
 }
 
 GtkWidget *
diff --git a/tests/testtext.c b/tests/testtext.c
index 880eaa7..b9678bf 100644
--- a/tests/testtext.c
+++ b/tests/testtext.c
@@ -20,7 +20,6 @@
 
 #include "config.h"
 #include <stdio.h>
-#include <sys/stat.h>
 #include <errno.h>
 #include <stdlib.h>
 #include <string.h>
@@ -30,6 +29,7 @@
 
 #include <gtk/gtk.h>
 #include <gdk/gdkkeysyms.h>
+#include <glib/gstdio.h>
 
 #include "prop-editor.h"
 
@@ -2096,9 +2096,9 @@ save_as_ok_func (const char *filename, gpointer data)
 
   if (!buffer->filename || strcmp (filename, buffer->filename) != 0)
     {
-      struct stat statbuf;
+      GStatBuf statbuf;
 
-      if (stat (filename, &statbuf) == 0)
+      if (g_stat (filename, &statbuf) == 0)
 	{
 	  gchar *err = g_strdup_printf ("Ovewrite existing file '%s'?", filename);
 	  gint result = msgbox_run (NULL, err, "Yes", "No", NULL, 1);
