diff --git a/CMakeLists.txt b/CMakeLists.txt
index a8a866b..cf40db6 100755
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -21,12 +21,13 @@ OPTION (USE_PTHREADS "Thread-safe build (using pthreads)" OFF)
 
 set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}")
 set (LIB_DESTINATION "${CMAKE_INSTALL_PREFIX}/lib${LIB_SUFFIX}")
-set (INCLUDE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/include/")
+set (INCLUDE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/include/cfitsio")
 
 # Define project version
 SET(${PROJECT_NAME}_MAJOR_VERSION 3)
 SET(${PROJECT_NAME}_MINOR_VERSION 45)
 SET(${PROJECT_NAME}_VERSION ${${PROJECT_NAME}_MAJOR_VERSION}.${${PROJECT_NAME}_MINOR_VERSION})
+SET(${PROJECT_NAME}_SOVERSION ${${PROJECT_NAME}_MAJOR_VERSION})
 SET(LIB_NAME cfitsio)
 
 # Microsoft Visual Studio:
@@ -71,7 +72,7 @@ ELSE()
 ENDIF()
 
 # Support for remote file drivers is not implemented for native Windows:
-IF (NOT MSVC)
+IF (NOT WIN32)
     # Find library needed for gethostbyname:
     CHECK_FUNCTION_EXISTS("gethostbyname" CMAKE_HAVE_GETHOSTBYNAME)
     IF(NOT CMAKE_HAVE_GETHOSTBYNAME)
@@ -109,18 +110,30 @@ SET(SRC_FILES
     putcolu.c putcolui.c putcoluj.c putkey.c region.c scalnull.c
     swapproc.c wcssub.c wcsutil.c imcompress.c quantize.c ricecomp.c
     pliocomp.c fits_hcompress.c fits_hdecompress.c zlib/zuncompress.c
-    zlib/zcompress.c zlib/adler32.c zlib/crc32.c zlib/inffast.c
-    zlib/inftrees.c zlib/trees.c zlib/zutil.c zlib/deflate.c
-    zlib/infback.c zlib/inflate.c zlib/uncompr.c simplerng.c
+    zlib/zcompress.c  zlib/zutil.c simplerng.c
     f77_wrap1.c f77_wrap2.c f77_wrap3.c f77_wrap4.c
 )
 
 ADD_LIBRARY(${LIB_NAME} ${LIB_TYPE} ${H_FILES} ${SRC_FILES})
-TARGET_LINK_LIBRARIES(${LIB_NAME} ${PTHREADS_LIBRARY} ${M_LIB} ${CURL_LIBRARIES})
+TARGET_LINK_LIBRARIES(${LIB_NAME} ${PTHREADS_LIBRARY} ${M_LIB} ${CURL_LIBRARIES} z)
 
 SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES VERSION ${${PROJECT_NAME}_VERSION} SOVERSION ${${PROJECT_NAME}_MAJOR_VERSION})
-install(TARGETS ${LIB_NAME} DESTINATION ${LIB_DESTINATION})
-install(FILES ${H_FILES} DESTINATION ${INCLUDE_INSTALL_DIR} COMPONENT Devel)
+
+IF(WIN32)
+    SET_TARGET_PROPERTIES(${LIB_NAME}
+        PROPERTIES
+        OUTPUT_NAME ${LIB_NAME}
+        RUNTIME_OUTPUT_NAME "${LIB_NAME}-${${PROJECT_NAME}_SOVERSION}"
+        ARCHIVE_OUTPUT_NAME ${LIB_NAME}
+    )
+ENDIF(WIN32)
+
+INSTALL(TARGETS ${LIB_NAME}
+    RUNTIME DESTINATION bin COMPONENT libraries
+    ARCHIVE DESTINATION lib${LIB_SUFFIX} COMPONENT libraries
+    LIBRARY DESTINATION lib${LIB_SUFFIX} COMPONENT libraries
+)
+INSTALL(FILES ${H_FILES} DESTINATION ${INCLUDE_INSTALL_DIR} COMPONENT Devel)
 
 ENABLE_TESTING()
 
@@ -137,9 +150,11 @@ ADD_TEST(cookbook cookbook)
 
 ADD_EXECUTABLE(FPack fpack.c fpackutil.c)
 TARGET_LINK_LIBRARIES(FPack ${LIB_NAME})
+INSTALL(TARGETS FPack DESTINATION bin)
 
 ADD_EXECUTABLE(Funpack funpack.c fpackutil.c)
 TARGET_LINK_LIBRARIES(Funpack ${LIB_NAME})
+INSTALL(TARGETS Funpack DESTINATION bin)
 
 ADD_EXECUTABLE(Fitscopy fitscopy.c)
 TARGET_LINK_LIBRARIES(Fitscopy ${LIB_NAME})
@@ -151,3 +166,8 @@ if(MSVC)
     LINK_FLAGS "setargv.obj"
   )
 endif(MSVC)
+
+STRING(REGEX REPLACE "^${CMAKE_INSTALL_PREFIX}/" "" PC_INCLUDE_DIR ${INCLUDE_INSTALL_DIR})
+STRING(REGEX REPLACE "^${CMAKE_INSTALL_PREFIX}/" "" PC_LIB_DIR lib${LIB_SUFFIX} )
+CONFIGURE_FILE(cfitsio.pc.in cfitsio.pc @ONLY)
+INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/cfitsio.pc DESTINATION lib${LIB_SUFFIX}/pkgconfig)
diff --git a/cfitsio.pc.in b/cfitsio.pc.in
index 2d884e0..eb17b79 100644
--- a/cfitsio.pc.in
+++ b/cfitsio.pc.in
@@ -1,11 +1,10 @@
-prefix=@prefix@
-exec_prefix=@exec_prefix@
-libdir=@libdir@
-includedir=@includedir@
+prefix=@CMAKE_INSTALL_PREFIX@
+libdir=${prefix}/@PC_LIB_DIR@
+includedir=${prefix}/@PC_INCLUDE_DIR@
 
 Name: cfitsio
 Description: FITS File Subroutine Library
 Version: @CFITSIO_MAJOR@.@CFITSIO_MINOR@
 Libs: -L${libdir} -lcfitsio @LIBS@
-Libs.private: -lm
+Libs.private: -lm -lz
 Cflags: -I${includedir}
