diff --git a/Makefile-giscanner.am b/Makefile-giscanner.am
index 06bc4be..1da928d 100644
--- a/Makefile-giscanner.am
+++ b/Makefile-giscanner.am
@@ -127,7 +127,7 @@ _giscanner_la_LIBADD += \
 
 _giscanner_la_LDFLAGS += \
 	-no-undefined \
-	-shrext ".pyd"
+	-shrext $(PYTHON_SO)
 endif
 
 _giscanner_la_SOURCES = giscanner/giscannermodule.c
diff --git a/Makefile.am b/Makefile.am
index dafea38..ddc0aca 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -15,7 +15,7 @@ EXTRA_PROGRAMS =
 TESTS =
 
 include common.mk
-include Makefile.introspection
+include Makefile.introspection.in
 
 include Makefile-cmph.am
 include Makefile-girepository.am
diff --git a/Makefile.introspection b/Makefile.introspection
index 5b38e35..7fabff6 100644
--- a/Makefile.introspection
+++ b/Makefile.introspection
@@ -64,12 +64,8 @@ _gir_includes = $(foreach include,$($(_gir_name)_INCLUDES),--include=$(include))
 _gir_export_packages = $(foreach pkg,$($(_gir_name)_EXPORT_PACKAGES),--pkg-export=$(pkg))
 _gir_c_includes = $(foreach include,$($(_gir_name)_C_INCLUDES),--c-include=$(include))
 
-# Reuse the LIBTOOL variable from automake if it's set, but
-# work around MSYS weirdness: When running g-ir-scanner, MSYS changes
-# a command-line argument --libtool="/bin/sh ../../libtool" into
-# --libtool=c:/opt/msys/1.0/bin/libtool. So just use sh.exe without path
-# because we already "know" where the libtool configure produced is.
-_gir_libtool = $(if $(findstring MINGW,$(shell uname -s)),--libtool="$(top_builddir)/libtool",$(if $(LIBTOOL),--libtool="$(LIBTOOL)"))
+# Reuse the LIBTOOL variable from automake if it's set
+_gir_libtool = $(if $(LIBTOOL),--libtool="$(LIBTOOL)")
 
 # Macros for AM_SILENT_RULES prettiness
 _gir_verbosity = $(if $(AM_DEFAULT_VERBOSITY),$(AM_DEFAULT_VERBOSITY),1)
diff --git a/Makefile.introspection.in b/Makefile.introspection.in
index e69de29..9c7ecdd 100644
--- a/Makefile.introspection.in
+++ b/Makefile.introspection.in
@@ -0,0 +1,185 @@
+# -*- Mode: make -*-
+# Copyright 2009-2010 Johan Dahlin
+#
+# This file is free software; the author(s) gives unlimited
+# permission to copy and/or distribute it, with or without
+# modifications, as long as this notice is preserved.
+#
+# * Input variables:
+#
+#   INTROSPECTION_GIRS - List of GIRS that should be generated
+#   INTROSPECTION_SCANNER - Command to invoke scanner, normally set by
+#      GOBJECT_INTROSPECTION_REQUIRE/CHECK() in introspection.m4
+#   INTROSPECTION_SCANNER_ARGS - Additional args to pass in to the scanner
+#   INTROSPECTION_SCANNER_ENV - Environment variables to set before running
+#      the scanner
+#   INTROSPECTION_COMPILER - Command to invoke compiler, normally set by
+#      GOBJECT_INTROSPECTION_REQUIRE/CHECK() in introspection.m4
+#   INTROSPECTION_COMPILER_ARGS - Additional args to pass in to the compiler
+#
+# * Simple tutorial
+#
+# Add this to configure.ac:
+#   -Wno-portability to AM_INIT_AUTOMAKE
+#   GOBJECT_INTROSPECTION_CHECK([0.6.7])
+#
+# Add this to Makefile.am where your library/program is built:
+#   include $(INTROSPECTION_MAKEFILE)
+#   INTROSPECTION_GIRS = YourLib-1.0.gir
+#   YourLib-1.0.gir: libyourlib.la
+#   YourLib_1_0_gir_NAMESPACE = YourLib
+#   YourLib_1_0_gir_VERSION = 1.0
+#   YourLib_1_0_gir_LIBS = libyourlib.la
+#   YourLib_1_0_gir_FILES = $(libyourlib_1_0_SOURCES)
+#   girdir = $(datadir)/gir-1.0
+#   dist_gir_DATA = YourLib-1.0.gir
+#   typelibdir = $(libdir)/girepository-1.0
+#   typelib_DATA = YourLib-1.0.typelib
+#   CLEANFILES = $(dist_gir_DATA) $(typelib_DATA)
+#
+
+# Make sure the required variables are set, these should under normal
+# circumstances come from introspection.m4
+$(if $(INTROSPECTION_SCANNER),,$(error Need to define INTROSPECTION_SCANNER))
+$(if $(INTROSPECTION_COMPILER),,$(error Need to define INTROSPECTION_COMPILER))
+
+# Private functions
+
+## Transform the gir filename to something which can reference through a variable
+## without automake/make complaining, eg Gtk-2.0.gir -> Gtk_2_0_gir
+_gir_name = $(subst /,_,$(subst -,_,$(subst .,_,$(1))))
+
+# Namespace and Version is either fetched from the gir filename
+# or the _NAMESPACE/_VERSION variable combo
+_gir_namespace = $(or $($(_gir_name)_NAMESPACE),$(firstword $(subst -, ,$(notdir $(1)))))
+_gir_version = $(or $($(_gir_name)_VERSION),$(lastword $(subst -, ,$(1:.gir=))))
+
+# _PROGRAM is an optional variable which needs it's own --program argument
+_gir_program = $(if $($(_gir_name)_PROGRAM),--program=$($(_gir_name)_PROGRAM))
+
+# Variables which provides a list of things
+_gir_libraries = $(foreach lib,$($(_gir_name)_LIBS),--library=$(lib))
+_gir_packages = $(foreach pkg,$($(_gir_name)_PACKAGES),--pkg=$(pkg))
+_gir_includes = $(foreach include,$($(_gir_name)_INCLUDES),--include=$(include))
+_gir_export_packages = $(foreach pkg,$($(_gir_name)_EXPORT_PACKAGES),--pkg-export=$(pkg))
+
+# Reuse the LIBTOOL variable from automake if it's set
+_gir_libtool = $(if $(LIBTOOL),--libtool="$(LIBTOOL)")
+
+# Macros for AM_SILENT_RULES prettiness
+_gir_verbosity = $(if $(AM_DEFAULT_VERBOSITY),$(AM_DEFAULT_VERBOSITY),1)
+
+_gir_silent_scanner_prefix = $(_gir_silent_scanner_prefix_$(V))
+_gir_silent_scanner_prefix_ = $(_gir_silent_scanner_prefix_$(_gir_verbosity))
+_gir_silent_scanner_prefix_0 = @echo "  GISCAN   $(1)";
+_gir_silent_scanner_opts = $(_gir_silent_scanner_opts_$(V))
+_gir_silent_scanner_opts_ = $(_gir_silent_scanner_opts_$(_gir_verbosity))
+_gir_silent_scanner_opts_0 = --quiet
+
+_gir_silent_compiler = $(_gir_silent_compiler_$(V))
+_gir_silent_compiler_ = $(_gir_silent_compiler_$(_gir_verbosity))
+_gir_silent_compiler_0 = @echo "  GICOMP   $(1)";
+
+_gir_default_scanner_env = CPPFLAGS="$(CPPFLAGS)" CFLAGS="$(CFLAGS)" LDFLAGS="$(LDFLAGS)" CC="$(CC)"
+
+#
+# Creates a GIR by scanning C headers/sources
+# $(1) - Name of the gir file (output)
+#
+# If output is Gtk-2.0.gir then you should name the variables like
+# Gtk_2_0_gir_NAMESPACE, Gtk_2_0_gir_VERSION etc.
+# Required variables:
+# FILES - C sources and headers which should be scanned
+#
+# One of these variables are required:
+# LIBS - Library where the symbol represented in the gir can be found
+# PROGRAM - Program where the symbol represented in the gir can be found
+#
+# Optional variables
+# NAMESPACE - Namespace of the gir, first letter capital,
+#   rest should be lower case, for instance: 'Gtk', 'Clutter', 'ClutterGtk'.
+#   If not present the namespace will be fetched from the gir filename,
+#   the part before the first dash. For 'Gtk-2.0', namespace will be 'Gtk'.
+# VERSION - Version of the gir, if not present, will be fetched from gir
+# filename, the part after the first dash. For 'Gtk-2.0', version will be '2.0'.
+# LIBTOOL - Command to invoke libtool, usually set by automake
+# SCANNERFLAGS - Flags to pass in to the scanner, see g-ir-scanner(1) for a list
+# CFLAGS - Flags to pass in to the parser when scanning headers
+# LDFLAGS - Linker flags used by the scanner
+# PACKAGES - list of pkg-config names which cflags are required to parse
+#   the headers of this gir
+# INCLUDES - Gir files to include without the .gir suffix, for instance
+#   GLib-2.0, Gtk-2.0. This is needed for all libraries which you depend on that
+#   provides introspection information.
+# EXPORT_PACKAGES - list of pkg-config names that are provided by this gir.
+#   By default the names in the PACKAGES variable will be used.
+#
+
+define introspection-scanner
+
+# Basic sanity check, to make sure required variables are set
+$(if $($(_gir_name)_FILES),,$(error Need to define $(_gir_name)_FILES))
+$(if $(or $(findstring --header-only,$($(_gir_name)_SCANNERFLAGS)),
+          $($(_gir_name)_LIBS),
+          $($(_gir_name)_PROGRAM)),,
+    $(error Need to define $(_gir_name)_LIBS or $(_gir_name)_PROGRAM))
+
+# Only dependencies we know are actually filenames goes into _FILES, make
+# sure these are built before running the scanner. Libraries and programs
+# needs to be added manually.
+@COMMENT_ON_W32@$(1): $$($(_gir_name)_FILES)
+@COMMENT_ON_W32@	@ $(MKDIR_P) $(dir $(1))
+@COMMENT_ON_W32@	$(_gir_silent_scanner_prefix) $(_gir_default_scanner_env) $(INTROSPECTION_SCANNER_ENV) $(INTROSPECTION_SCANNER) $(_gir_silent_scanner_opts) \
+@COMMENT_ON_W32@	$(INTROSPECTION_SCANNER_ARGS) \
+@COMMENT_ON_W32@	  --namespace=$(_gir_namespace) \
+@COMMENT_ON_W32@	  --nsversion=$(_gir_version) \
+@COMMENT_ON_W32@	  $(_gir_libtool) \
+@COMMENT_ON_W32@	  $(_gir_packages) \
+@COMMENT_ON_W32@	  $(_gir_includes) \
+@COMMENT_ON_W32@	  $(_gir_export_packages) \
+@COMMENT_ON_W32@	  $(_gir_program) \
+@COMMENT_ON_W32@	  $(_gir_libraries) \
+@COMMENT_ON_W32@	  $($(_gir_name)_SCANNERFLAGS) \
+@COMMENT_ON_W32@	  --cflags-begin \
+@COMMENT_ON_W32@	  $($(_gir_name)_CFLAGS) \
+@COMMENT_ON_W32@	  --cflags-end \
+@COMMENT_ON_W32@	  $($(_gir_name)_LDFLAGS) \
+@COMMENT_ON_W32@	  $$^ \
+@COMMENT_ON_W32@	  --output $(1)
+
+@COMMENT_ON_NONW32@$(1): $$($(_gir_name)_FILES)
+@COMMENT_ON_NONW32@	@ $(MKDIR_P) $(dir $(1))
+@COMMENT_ON_NONW32@	@ echo $$^ > $(1).files
+@COMMENT_ON_NONW32@	$(_gir_silent_scanner_prefix) $(_gir_default_scanner_env) $(INTROSPECTION_SCANNER_ENV) $(INTROSPECTION_SCANNER) $(_gir_silent_scanner_opts) \
+@COMMENT_ON_NONW32@	$(INTROSPECTION_SCANNER_ARGS) \
+@COMMENT_ON_NONW32@	  --namespace=$(_gir_namespace) \
+@COMMENT_ON_NONW32@	  --nsversion=$(_gir_version) \
+@COMMENT_ON_NONW32@	  $(_gir_libtool) \
+@COMMENT_ON_NONW32@	  $(_gir_packages) \
+@COMMENT_ON_NONW32@	  $(_gir_includes) \
+@COMMENT_ON_NONW32@	  $(_gir_export_packages) \
+@COMMENT_ON_NONW32@	  $(_gir_program) \
+@COMMENT_ON_NONW32@	  $(_gir_libraries) \
+@COMMENT_ON_NONW32@	  $($(_gir_name)_SCANNERFLAGS) \
+@COMMENT_ON_NONW32@	  --cflags-begin \
+@COMMENT_ON_NONW32@	  $($(_gir_name)_CFLAGS) \
+@COMMENT_ON_NONW32@	  --cflags-end \
+@COMMENT_ON_NONW32@	  $($(_gir_name)_LDFLAGS) \
+@COMMENT_ON_NONW32@	  --argfile=$(1).files \
+@COMMENT_ON_NONW32@	  --output $(1)
+endef
+
+$(foreach gir,$(INTROSPECTION_GIRS),$(eval $(call introspection-scanner,$(gir))))
+
+#
+# Compiles a gir into a typelib
+# $(1): gir filename (input)
+# $(2): typelib filename (output)
+#
+define introspection-compiler
+$(_gir_silent_compiler) $(INTROSPECTION_COMPILER) $(INTROSPECTION_COMPILER_ARGS) --includedir=. $(1) -o $(2)
+endef
+
+# Simple rule to compile a typelib.
+%.typelib: %.gir
+	$(call introspection-compiler,$<,$@)
diff --git a/configure.ac b/configure.ac
index 2a68514..66f6831 100644
--- a/configure.ac
+++ b/configure.ac
@@ -31,12 +31,18 @@ AC_CANONICAL_HOST
 case "$host" in
 *-*-mingw*)
 	os_win32=yes
+	COMMENT_ON_W32='#'
+	COMMENT_ON_NONW32=
 	;;
 *)
 	os_win32=no
+	COMMENT_ON_W32=
+	COMMENT_ON_NONW32='#'
 	;;
 esac
 AM_CONDITIONAL(OS_WIN32, [test "x$os_win32" = "xyes"])
+AC_SUBST(COMMENT_ON_W32)
+AC_SUBST(COMMENT_ON_NONW32)
 
 # Checks for programs.
 AC_PROG_CC
@@ -278,6 +284,9 @@ if test "x$os_win32" = "xyes"; then
   AM_CHECK_PYTHON_LIBS(, AC_MSG_ERROR([Python libs not found. Windows requires Python modules to be explicitly linked to libpython.]))
 fi
 
+PYTHON_SO=`$PYTHON -c "import sysconfig, sys; get = sysconfig.get_config_var; sys.stdout.write(get('EXT_SUFFIX') or get('SO') or '.so');"`
+AC_SUBST(PYTHON_SO)
+
 dnl Not enabled by default until 3.6 cycle when we can propose mako as
 dnl an external dependency
 AC_ARG_ENABLE(doctool,[  --disable-doctool           disable g-ir-doc-tool ],,enable_doctool=auto)
@@ -378,6 +387,7 @@ tests/warn/Makefile
 docs/Makefile
 docs/reference/Makefile
 docs/reference/version.xml
+Makefile.introspection
 gobject-introspection-1.0.pc
 gobject-introspection-no-export-1.0.pc
 config.h.win32
diff --git a/giscanner/ccompiler.py b/giscanner/ccompiler.py
index d10327c..bd739ff 100644
--- a/giscanner/ccompiler.py
+++ b/giscanner/ccompiler.py
@@ -280,8 +280,6 @@ class CCompiler(object):
         else:
             libtool = utils.get_libtool_command(options)
             if libtool:
-                if os.name == 'nt':
-                    args.append(utils.which(os.environ.get('SHELL', 'sh.exe')))
                 args.extend(libtool)
                 args.append('--mode=execute')
             args.extend([os.environ.get('DLLTOOL', 'dlltool.exe'), '--identify'])
diff --git a/giscanner/dumper.py b/giscanner/dumper.py
index 3c7220b..86e0c86 100644
--- a/giscanner/dumper.py
+++ b/giscanner/dumper.py
@@ -25,6 +25,7 @@ from __future__ import print_function
 from __future__ import unicode_literals
 
 import os
+import io
 import sys
 import shlex
 import subprocess
@@ -168,14 +169,14 @@ class DumpCompiler(object):
             introspection_obj = self._compile(c_path)
         except CompilerError as e:
             if not utils.have_debug_flag('save-temps'):
-                shutil.rmtree(tmpdir)
+                shutil.rmtree(tmpdir, True)
             raise SystemExit('compilation of temporary binary failed:' + str(e))
 
         try:
             self._link(bin_path, introspection_obj)
         except LinkerError as e:
             if not utils.have_debug_flag('save-temps'):
-                shutil.rmtree(tmpdir)
+                shutil.rmtree(tmpdir, True)
             raise SystemExit('linking of temporary binary failed: ' + str(e))
 
         return IntrospectionBinary([bin_path], tmpdir)
@@ -281,7 +282,8 @@ class DumpCompiler(object):
             # Create a temporary script file that
             # runs the command we want
             tf, tf_name = tempfile.mkstemp()
-            with os.fdopen(tf, 'wb') as f:
+            os.close(tf)
+            with io.open(tf_name, 'w', encoding='utf-8') as f:
                 shellcontents = ' '.join([x.replace('\\', '/') for x in args])
                 fcontents = '#!/bin/sh\nunset PWD\n{}\n'.format(shellcontents)
                 f.write(fcontents)
diff --git a/giscanner/gdumpparser.py b/giscanner/gdumpparser.py
index 1134f33..c268325 100644
--- a/giscanner/gdumpparser.py
+++ b/giscanner/gdumpparser.py
@@ -28,6 +28,7 @@ import sys
 import tempfile
 import shutil
 import subprocess
+import time
 from xml.etree.cElementTree import parse
 
 from . import ast
@@ -150,6 +151,9 @@ class GDumpParser(object):
         """Load the library (or executable), returning an XML
 blob containing data gleaned from GObject's primitive introspection."""
         in_path = os.path.join(self._binary.tmpdir, 'functions.txt')
+
+        assert os.path.isdir(self._binary.tmpdir), "tmpdir missing!"
+
         with open(in_path, 'w') as f:
             for func in self._get_type_functions:
                 f.write('get-type:')
@@ -159,6 +163,14 @@ blob containing data gleaned from GObject's primitive introspection."""
                 f.write('error-quark:')
                 f.write(func)
                 f.write('\n')
+
+        for i in range(10):
+            if os.path.exists(in_path):
+                break
+            message.warn("functions.txt missing, waiting 2s (%s/10)" % (i+1,))
+            time.sleep(2)
+        assert os.path.exists(in_path), "functions.txt still missing!"
+
         out_path = os.path.join(self._binary.tmpdir, 'dump.xml')
 
         args = []
@@ -178,10 +190,28 @@ blob containing data gleaned from GObject's primitive introspection."""
             except subprocess.CalledProcessError as e:
                 # Clean up temporaries
                 raise SystemExit(e)
-            return parse(out_path)
+
+            for i in range(10):
+                if os.path.exists(out_path):
+                    break
+                message.warn("dump.xml missing, waiting 2s (%s/10)" % (i+1,))
+                time.sleep(2)
+            assert os.path.exists(out_path), "dump.xml still missing"
+
+            # Just in case the XML data is not fully written at this point...
+            for i in range(10):
+                try:
+                    return parse(out_path)
+                except Exception as e:
+                    message.warn("XML parse failed (%d/10): %s" % (i+1, e))
+                    if i >= 10:
+                        raise
+                time.sleep(2)
+            raise RuntimeError("this exception should never happen")
+
         finally:
             if not utils.have_debug_flag('save-temps'):
-                shutil.rmtree(self._binary.tmpdir)
+                shutil.rmtree(self._binary.tmpdir, True)
 
     # Parser
 
diff --git a/giscanner/scannermain.py b/giscanner/scannermain.py
index ffcb95c..17df61a 100755
--- a/giscanner/scannermain.py
+++ b/giscanner/scannermain.py
@@ -491,8 +491,9 @@ def write_output(data, options):
 
 
 def scanner_main(args):
+    loaded_args = utils.maybe_load_args_from_file(args)
     parser = _get_option_parser()
-    (options, args) = parser.parse_args(args)
+    (options, args) = parser.parse_args(loaded_args)
 
     if options.passthrough_gir:
         passthrough_gir(options.passthrough_gir, sys.stdout)
diff --git a/giscanner/utils.py b/giscanner/utils.py
index 09132b2..004b4e6 100644
--- a/giscanner/utils.py
+++ b/giscanner/utils.py
@@ -27,6 +27,7 @@ import re
 import os
 import subprocess
 import platform
+import shlex
 
 
 _debugflags = None
@@ -80,6 +81,59 @@ def to_underscores_noprefix(name):
     return name
 
 
+def cygmsys_mangle(arg):
+    shell = which(os.environ.get('SHELL', 'sh.exe'))
+    p = subprocess.Popen([shell, '-c', 'cmd //C echo ' + arg], stdout=subprocess.PIPE)
+    result, _ = p.communicate()
+    return result.decode('utf-8').rstrip('\n').rstrip('\r') if p.returncode == 0 else None
+
+
+def load_args_from_file(filename):
+    with open(filename, 'rb') as source:
+        contents = source.read().decode('UTF-8')
+        result = shlex.split(contents)
+    if os.name == 'nt':
+        args = []
+        for arg in result:
+            mangled = cygmsys_mangle(arg)
+            if mangled is not None:
+                args.append(mangled)
+        result = args
+    return result
+
+
+def maybe_load_args_from_file(args):
+    if os.name != 'nt':
+        return args
+
+    processed_args = []
+    skip = False
+    is_input_file = False
+    argfilelen = len('--argfile=')
+    for argn, arg in enumerate(args):
+        if skip:
+            processed_args.append(arg)
+            continue
+        elif arg == '--':
+            skip = True
+            processed_args.append(arg)
+            continue
+
+        if is_input_file:
+            processed_args.extend(load_args_from_file(arg))
+            is_input_file = False
+            continue
+
+        if arg == '--argfile' and argn + 1 < len(args):
+            is_input_file = True
+            continue
+        elif arg.startswith('--argfile=') and len(arg) > argfilelen:
+            processed_args.extend(load_args_from_file(arg[argfilelen:]))
+            continue
+        processed_args.append(arg)
+    return processed_args
+
+
 _libtool_pat = re.compile("dlname='([A-z0-9\.\-\+]+)'\n")
 
 
diff --git a/m4/introspection.m4 b/m4/introspection.m4
index d89c3d9..9ee60eb 100644
--- a/m4/introspection.m4
+++ b/m4/introspection.m4
@@ -56,14 +56,14 @@ m4_define([_GOBJECT_INTROSPECTION_CHECK_INTERNAL],
     INTROSPECTION_GIRDIR=
     INTROSPECTION_TYPELIBDIR=
     if test "x$found_introspection" = "xyes"; then
-       INTROSPECTION_SCANNER=`$PKG_CONFIG --variable=g_ir_scanner gobject-introspection-1.0`
-       INTROSPECTION_COMPILER=`$PKG_CONFIG --variable=g_ir_compiler gobject-introspection-1.0`
-       INTROSPECTION_GENERATE=`$PKG_CONFIG --variable=g_ir_generate gobject-introspection-1.0`
-       INTROSPECTION_GIRDIR=`$PKG_CONFIG --variable=girdir gobject-introspection-1.0`
-       INTROSPECTION_TYPELIBDIR="$($PKG_CONFIG --variable=typelibdir gobject-introspection-1.0)"
-       INTROSPECTION_CFLAGS=`$PKG_CONFIG --cflags gobject-introspection-1.0`
-       INTROSPECTION_LIBS=`$PKG_CONFIG --libs gobject-introspection-1.0`
-       INTROSPECTION_MAKEFILE=`$PKG_CONFIG --variable=datadir gobject-introspection-1.0`/gobject-introspection-1.0/Makefile.introspection
+       INTROSPECTION_SCANNER=`$PKG_CONFIG --dont-define-prefix --variable=g_ir_scanner gobject-introspection-1.0`
+       INTROSPECTION_COMPILER=`$PKG_CONFIG --dont-define-prefix --variable=g_ir_compiler gobject-introspection-1.0`
+       INTROSPECTION_GENERATE=`$PKG_CONFIG --dont-define-prefix --variable=g_ir_generate gobject-introspection-1.0`
+       INTROSPECTION_GIRDIR=`$PKG_CONFIG --dont-define-prefix --variable=girdir gobject-introspection-1.0`
+       INTROSPECTION_TYPELIBDIR="$($PKG_CONFIG --dont-define-prefix --variable=typelibdir gobject-introspection-1.0)"
+       INTROSPECTION_CFLAGS=`$PKG_CONFIG --dont-define-prefix --cflags gobject-introspection-1.0`
+       INTROSPECTION_LIBS=`$PKG_CONFIG --dont-define-prefix --libs gobject-introspection-1.0`
+       INTROSPECTION_MAKEFILE=`$PKG_CONFIG --dont-define-prefix --variable=datadir gobject-introspection-1.0`/gobject-introspection-1.0/Makefile.introspection
     fi
     AC_SUBST(INTROSPECTION_SCANNER)
     AC_SUBST(INTROSPECTION_COMPILER)
diff --git a/m4/python.m4 b/m4/python.m4
index ed5559d..88769a4 100644
--- a/m4/python.m4
+++ b/m4/python.m4
@@ -43,7 +43,7 @@ AC_DEFUN([AM_CHECK_PYTHON_HEADERS],
 [AC_REQUIRE([AM_PATH_PYTHON])
 AC_MSG_CHECKING(for headers required to compile python extensions)
 dnl deduce PYTHON_INCLUDES
-PYTHON_INCLUDES=`$PYTHON-config --includes`
+PYTHON_INCLUDES=`$CRXP_PATH/bin/python-config --includes`
 AC_SUBST(PYTHON_INCLUDES)
 dnl check if the headers exist:
 save_CPPFLAGS="$CPPFLAGS"
@@ -64,7 +64,7 @@ AC_DEFUN([AM_CHECK_PYTHON_LIBS],
 AC_MSG_CHECKING(for libraries required to link against libpython)
 dnl deduce PYTHON_LIBS
 if test "x$PYTHON_LIBS" = x; then
-	PYTHON_LIBS=`$PYTHON-config --ldflags --libs`
+	PYTHON_LIBS=`$CRXP_PATH/bin/python-config --ldflags`
 fi
 AC_SUBST(PYTHON_LIBS)
 dnl check if libpython exist:
diff --git a/tests/offsets/Makefile.am b/tests/offsets/Makefile.am
index 0df9c15..bab1f6d 100644
--- a/tests/offsets/Makefile.am
+++ b/tests/offsets/Makefile.am
@@ -1,5 +1,5 @@
 include $(top_srcdir)/common.mk
-include $(top_srcdir)/Makefile.introspection
+include $(top_srcdir)/Makefile.introspection.in
 
 BUILT_SOURCES =
 CLEANFILES =
@@ -18,7 +18,7 @@ liboffsets_la_SOURCES = \
 	offsets.c
 liboffsets_la_CPPFLAGS = $(GIREPO_CFLAGS) $(GI_HIDDEN_VISIBILITY_CFLAGS) -I$(top_srcdir)/tests
 # dummy rpath to get built dynamically (huh?)
-liboffsets_la_LDFLAGS = -avoid-version -rpath $(libdir)
+liboffsets_la_LDFLAGS = -avoid-version -no-undefined -rpath $(libdir)
 
 Offsets-1.0.gir: liboffsets.la offsets.h
 Offsets_1_0_gir_INCLUDES = GObject-2.0
diff --git a/tests/scanner/Makefile.am b/tests/scanner/Makefile.am
index 6b705f5..361841d 100644
--- a/tests/scanner/Makefile.am
+++ b/tests/scanner/Makefile.am
@@ -1,7 +1,7 @@
 NULL ?=
 
 include $(top_srcdir)/common.mk
-include $(top_srcdir)/Makefile.introspection
+include $(top_srcdir)/Makefile.introspection.in
 
 SUBDIRS = . annotationparser
 
